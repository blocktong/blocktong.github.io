{"pageProps":{"posts":[{"title":"폭발 에어드랍 2024 - 폭발 에어드랍의 철저한 안내서","description":"","date":"2024-05-05 17:23","slug":"2024-05-05-BlastAirdrop2024-TheComprehensiveGuideforBlastAirdrop","content":"\n\n![Blast Airdrop](/assets/img/2024-05-05-BlastAirdrop2024-TheComprehensiveGuideforBlastAirdrop_0.png)\n\n# BLAST 에어드랍이란?\n\n블러 플랫폼 창립자 \"팩맨\"에 의해 만들어진 새롭게 소개된 이더리움 레이어 2 오퍼링인 Blast는 공개 론칭 이전에 폐쇄된 초청 전용 초기 액세스 캠페인으로 주목을 받고 있습니다. Paradigm 및 eGirl Capital과 같은 최고의 암호 화폐 펀드로부터 투자를 받아온 Blast는 이미 개인적인 Blast 커뮤니티에 참여하고 에어드랍 이니셔티브에 참여하는 방법에 대해 알고 있는 모든 것을 다루고 있습니다.\n\n# Blast Layer 2가 특별한 이유\n\n\n\n다른 스케일링 솔루션과는 달리 Blast는 스테이킹된 이더리움 및 스테이블코인에 대한 네이티브 수익 기회를 제공합니다. 최대 30%의 연간 수익률(30% APY)까지 가능합니다. 이를 통해 DeFi 사용자들은 비토큰화 자산에 대해서도 매력적인 보상을 받을 수 있는 방법을 제공합니다. Blast는 또한 이더리움 네트워크 전체의 NFT 유동성을 연결하는 주요 창구로 발전하기 위해 노력하고 있어, 거대한 거래량을 플랫폼으로 유도할 계획입니다. 이러한 강력한 가치 제안과 주요 투자자로부터의 지원을 통해 Blast는 상당한 상승 잠재력을 보유하고 있습니다.\n\n\\[이미지 설명\\](/assets/img/2024-05-05-BlastAirdrop2024-TheComprehensiveGuideforBlastAirdrop_1.png)\n\n**Blast 에어드랍 이벤트 — 초대 받는 방법?**\n\n현재 Blast에 접속하려면 커뮤니티의 일원인 다른 사람으로부터 초대 코드를 받아야 합니다.\n\n\n\n여기 BLAST AIRDROP에 참여할 수 있는 초대 코드 몇 개 있어요:\n\n- SFA3G\n- DB4HD\n- 934HD\n\n\n\n4YSDH\n\n4HSJG\n\nBLAST 에어드랍 참여 방법은 어떻게 되나요?\n\n- BLAST 웹사이트를 방문하셔서 MetaMask와 같은 기본 이더리움 지갑을 연결해 주세요.\n\n\n\n\n![BlastAirdrop2024-TheComprehensiveGuideforBlastAirdrop_2.png](/assets/img/2024-05-05-BlastAirdrop2024-TheComprehensiveGuideforBlastAirdrop_2.png)\n\n- 이더리움 메인넷에서 ETH 또는 안정화폐를 브릿지하여 수익을 창출하세요.\n\n![BlastAirdrop2024-TheComprehensiveGuideforBlastAirdrop_3.png](/assets/img/2024-05-05-BlastAirdrop2024-TheComprehensiveGuideforBlastAirdrop_3.png)\n\n- 맞춤 추천 코드로 친구를 추천하여 에어드랍 달성 지점으로 나아가 보세요!\n\n\n\n\n역할이 계속해서 증가하는 가운데, Blast 에어드랍 무료 토큰 배포에 대비하고자 빠르게 Blast 초대를 받아주세요! 🚀🎉","ogImage":{"url":"/assets/img/2024-05-05-BlastAirdrop2024-TheComprehensiveGuideforBlastAirdrop_0.png"},"coverImage":"/assets/img/2024-05-05-BlastAirdrop2024-TheComprehensiveGuideforBlastAirdrop_0.png","tag":["Tech"],"readingTime":2},{"title":"암호화폐로 모든 자금을 잃게 되는 상위 10가지 방법","description":"","date":"2024-05-05 17:19","slug":"2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto","content":"\n\n암호화폐 시장이 요즘 뜨겁습니다. 모두가 수백만을 벌 수 있는 다음 새로운 코인을 찾고 있으며, 제 이메일함은 비트코인을 사야 할지 물어오는 사람들로 넘쳐나고 있어요.\n\n이 제게 여러분이 암호화폐와 함께 모든 생활 저축을 잃어버릴 수 있는 최고의 10가지 방법을 알려드릴 딱 좋은 때인 것 같네요!\n\n우리가 자세히 알아보기 전에, 안녕하세요!👋 제 이름은 Tony이고, 2014년부터 이 공간에 종사하고 있어요. 몇 년 동안 상당한 수익을 올리기도 했지만 무엇보다 중요한 것은 옛날 친구들이 가장 창의적인 방법으로 수백만 달러를 잃어버린 모습을 목격했다는 거예요.\n\n이 기사에서는 정확히 그들이 그랬는지 알려드릴 테니, 아마도 같은 비참한 운명을 피할 수 있을 거예요. 희망을 가져봅시다.🤞\n\n\n\n# 1. 스케치한 거래소 사용하기\n\n암호화폐를 사기 시작했어요. 저 같은 명민한 전문가들이 꼭 Coinbase나 Binance만 사용하라고 충고했는데도 여러분에게 충분하지 않군요. 어디선가 들려온 그 새로운 메멘토 코인을 원하는 마음이군요. 이것이 이상한 루마니아 거래소에서만 거래되고 있다고 하죠. VPN을 실행하고 구글 번역을 열어 계정을 만들어보세요.\n\n몇 달이 흘러 그 거래소에 로그인을 시도해봤더니, 맨 빈 화면에 낯선 \"penis\" 메시지가 반기를 듭니다. 아니면 404 오류가 뜰 수도 있습니다. 혹은 FBI 공지도요. 어쨌든, 여러분의 돈 뿐만 아니라 그 거래소 자체도 사라져 버립니다.\n\n전문가 팁: 초보자로서 Coinbase와 Binance만을 사용하세요.\n\n\n\n# 2. 오프라인 2차 인증(2FA) 사용하지 않기\n\n이제 수업을 배운 걸로네요. 코인베이스를 플랫폼으로 사용하는 걸로 결정했는데, 2단계 앱 확인자를 활성화하지 않았네요. 당신의 인증 방법은 이메일과 전화번호 뿐이에요.\n\n일부 이익을 남기고 인스타그램에서 자랑스럽게 올리기도 했네요. 해커들이 다크 웹에 회원님에 대한 다양한 데이터 유출 정보를 찾아내고 말이죠.\n\n![이미지](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_0.png)\n\n\n\n다른 사람이 당신의 전화번호, 이메일, 생년월일 및 SSN을 가지고 있습니다. 그들은 당신의 휴대폰 공급업체에 전화를 걸어 사회 공학을 사용하여 보안 조치를 우회하고 SIM 카드를 제어합니다. 수 분 후, 그들은 SMS 인증을 사용하여 당신이 자는 동안 Gmail과 코인베이스 비밀번호를 재설정하고 계정을 털어버립니다.\n\n👉 **전문가 TIP**: SMS 인증을 비활성화하세요 — 안전하지 않습니다. 대신 앱 인증을 사용하세요. 그리고 Tofu 앱을 사용하세요. Gmail 계정에 연결된 구글 인증 앱이므로 구글 인증자를 사용하지 마세요. 또한, 전화번호에 연결된 Authy도 사용하지 마세요. 또한, 모든 플랫폼에서 화이트리스트 및 주소록을 활성화하세요! 🚀\n\n[![이미지1](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_1.png)](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_1.png)\n\n\n\n# 3. 개인 키 분실\n\n이제 더 이상 거래소를 이용하지 않습니다. \"당신의 키가 아니면, 당신의 코인도 아닙니다.\"를 승인했습니다. 핸드폰에 Trust와 Coinbase Wallet을 다운로드합니다. Chrome에 MetaMask를 설치하고 탈중앙화된 웹을 즐깁니다.\n\n이러한 앱을 설치할 때, 12개의 무작위 단어 문자열, 공개 키(당신의 주소) 및 개인 키(당신의 비밀번호)를 받게 됩니다. 그 정보를 저장해 두는 것이 매우 중요하다는 메시지가 표시됩니다. 그런데 그 후에...\n\n![Top10 Ways You Will Lose All Your Money in Crypto](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_3.png)\n\n\n\n- 정보 저장하지 말고\n- USB 드라이브의 TXT 파일에 저장해서 새로운 여자친구가 1년 후 청소를 하다가 실수로 쓰레기통에 버린다.\n- 종이에 적어 엄마 집에 두고, 그 종이가 재난을 당한 가정 화재 속에서 타버린다.\n\n그래도 몇 년 뒤에 핸드폰이 고장나버린다. 새 핸드폰을 산 뒤 앱을 다시 설치하고, 계정에 접속하는 정보가 더 이상 없다는 것을 깨닫게 된다. 돈은 영원히 사라지고, 연락할 고객 서비스도 없다. 이렇게 분산화된 웹에 감사하다!\n\n## 개인 키를 도난당하는 경우\n\n당신은 교훈을 배웠다. 이번에는 새로운 지갑을 만들고, 정보를 분실될 수 없는 곳에 저장했다! 혹시 드롭박스, 아이클라우드 노트, 또는 구글 드라이브의 텍스트 파일에 저장했거나, 재미있는 이름으로 지어 다른 사람의 주의를 끌지 않도록 했다면 좋겠다.\n\n\n\n그리고\n\n- 열차역에서 노트북을 도난당하고, 도둑들이 암호를 해킹하여 파일을 발견합니다.\n- 드롭박스가 해킹당하고 데이터가 다크 웹에 유출되어 해커가 그것을 찾습니다. 온갖 개인 키처럼 보이는 것을 검색하는 소프트웨어를 사용합니다.\n- 암호화폐와는 아무 상관없는 Chrome 확장 프로그램을 다운로드하는데, 그 안에는 키로거가 들어 있어 모든 복사하고 붙여넣기를 가로챕니다. 당신의 개인 키도 포함됩니다.\n\n이런 경우에도 도둑들이 당신의 계정을 털어가고 당신은 어떤 일이 있었는지 전혀 모릅니다.\n\n전문가 꿀팁: 개인 키와 복구 코드를 오프라인이며 암호로 보호된 장치에 저장해 보관해보세요. 적어도 2군데에 백업을 만들어, 어떤 일이 있어도 돈을 잃지 않도록 해주세요. 종이에 적는다면 지나치게 신중하게 다루고, 그 종이에서 계정을 복원해 보는 것을 테스트하여 오탈자가 없는지 확인하세요. 개인 키를 전체로 복사하여 붙여넣지 마세요. 특히 유니버설 클립보드를 사용하는 경우 더 조심해야 합니다. 마지막으로, 반드시 이런 사람이 되지 마세요:\n\n\n\n\n![image](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_4.png)\n\n# 4. 잘못된 주소로 송금하기\n\n이제 당신은 분산 월렛을 안전하게 관리했습니다. 이제 거래소에서 월렛으로 암호화폐를 송금하려 합니다.\n\n주소를 찾아서 복사합니다. 코인베이스로 이동하여 주소를 붙여넣기하고 코인을 송금한 후, 그리고... \n\n\n\n\n![Top 10 Ways You Will Lose All Your Money In Crypto](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_5.png)\n\n아무것도 없네요. 코인이 오지 않았네요. 무슨 일이 있었나요?\n\n오! 주소를 붙여 넣을 때, 실수로 백스페이스를 눌러서 주소의 매우 중요한 글자를 삭제했던 걸 잊으셨나요?\n\n![Top 10 Ways You Will Lose All Your Money In Crypto](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_6.png)\n\n\n\n혹시 메모를 요구하는 주소로 전송했나요? 아, 메모가 뭔지 몰랐나요?\n\n![Top 10 Ways You Will Lose All Your Money in Crypto 7](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_7.png)\n\n아니면 올바른 주소로 전송했지만 올바르지 않은 네트워크에 보냈나요? 이더리움, 폴리곤, 그리고 아발란치와 같이 이더리움과 같은 암호화폐가 서로 다른 네트워크에서 작동할 수 있다는 걸 몰랐나요? 또한, 바이낸스 비컨 체인과 바이낸스 스마트 체인의 차이를 알지 못했나요? 윽, 실수했네요!\n\n![Top 10 Ways You Will Lose All Your Money in Crypto 8](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_8.png)\n\n\n\n어떤 이유로든 너무 안타깝습니다. 당신이 돈을 잃게 되었고, 아무도 이를 바꿀 수는 없습니다.\n\n전문가 팁: 언제나 상당한 금액을 보내기 전에 테스트로 1달러 거래를 보내십시오. 수수료가 높더라도 괜찮습니다. 테스트 거래가 완료될 때까지 기다렸다가 전체 금액을 보내십시오. 새 거래소에 가입할 때는 자산을 인출할 수 있는지 확인하기 위해 입금 및 출금 테스트 거래를 보내십시오.\n\n# 5. MemeCoins로의 FOMO 질주\n\n![Top10WaysYouWillLoseAllYourMoneyinCrypto_9](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_9.png)\n\n\n\n님은 농담삼아 멤코인에 10달러를 투자했다가 1000달러를 벌었어요! 만세! 그러고는 이런 멋진 아이디어를 생각해 냈지요:\n\n요즘엔 매춘코인이 매일 100배가 되니까 말이죠. 친구 그렉은 조 바이든 코인으로 5만달러를 벌었는데, 그는 정말 멍청하더라고요. 왜 나도 못 할까요? 그래서 트위터에서 최신 핫한 멤코인을 찾아 모든 평생 저축금을 질러 넣었어요. 다음날, 이 아름다운 것을 만났어요:\n\n![click here](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_10.png)\n\n전문가 조언: 쓰레기 코인을 사는 것은 투자가 아닙니다. 도박입니다. 도박한 돈이 100% 손실될 수 있다고 가정하세요. 그것에 안정감을 느끼지 못한다면 구매하지 마세요.\n\n\n\n# 6. 트레이딩\n\n좋아요, 교훈 배웠습니다. 더 이상 FOMO를 하지 않겠어요. 행운을 빌며 100배 이익을 바라는 대신, 새로운 전략을 갖추었습니다.\n\n이제 Coinbase 고급 계정을 열어보세요. 차트 및 거래 패턴에 대한 몇 가지 YouTube 비디오를 시청해보세요. 이게 사실 남성을 위한 점성술과 같다는 걸 이해하려 하지 마세요.\n\n\n\n낮은 거래량의 거래를 시작했군요. 그러나 여러분은 이것이 여러분이 완전히 밀려난 플레이어 대 플레이어 게임임을 이해하지 못했습니다. 결국 여러분은 스탠퍼드와 MIT의 수십 명의 박사 학생들과 함께 현대화된 블록체인 조사 도구와 AI 기반 거래 봇을 사용하여 번개처럼 빠른 속도로 시장, 공급 및 수요 지표에 대한 완전한 시각성을 갖추고 있는 양적 중국 거래 회사들과 경쟁하고 있다는 것을 어떻게 알 수 있었을까요? 그들은 새로운 참가자들을 처단하려고 노력하고 있습니다. 또는 여러분이 거래하는 매우 거래소가 여러분에게도 적극적으로 거래를 하고 있는지 말입니다.\n\n![이미지](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_12.png)\n\n여러분은 첫째라도 낮은 거래량 거래란 무엇인지 조차 모르고 이 모든 것에 반박했습니다. 이제 여러분이 90%의 거래가 돈을 잃게 되는 것에 놀랄 때가 왔군요? 아마 이것은 여러분에게 어울리지 않은 일이었을지도 모릅니다. 🤷🏻‍♂️\n\n전문 팁: 거래하지 마세요.\n\n\n\n# 7. 세금\n\n오케이, 더 이상 거래하지 마세요. 하지만 아직 탈출한 것은 아닙니다.\n\n연말에 회계사가 기쁜 소식을 전해줍니다: 모든 암호화폐 거래에 대해 세금을 내야 한다는 것이 밝혀졌기 때문에 세금을 내야 합니다!\n\n![Top 10 Ways You Will Lose All Your Money in Crypto](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_13.png)\n\n\n\n이미 상승한 암호화폐로 거래를 하고 있었다면 2000건의 거래에서 각각 30%의 세금을 내야 한다는 사실을 깨달았을 거야. 세금 문제가 암단~심려게요. 거래하면서 잃은 암호 화폐의 90%가 호가리씩 맞춰지는게 참 기분 좋을 텐데.\n\n이 모든 거래를 신고하지 않았니? 걱정 마! Coinbase와 다른 미국 거래소들이 이미 당신을 대신해 세무청에 신고했어! 🥰 게다가, 당신의 개인 월렛 주소로 나가는 모든 암호화폐 거래도 똑똑하고 첨단한 블록체인 조사 도구를 통해 추적할 수 있도록 IRS에 보고했단다. 얼마나 친절한지!\n\n팁: 거래는 최소화하고, 연말에 모든 거래 내역을 신고하세요. Bitcoin.tax와 같은 도구를 사용해 세금을 추적하고 최적화하세요. 손실도 신고해서 돈을 절약할 수 있어요! 미국에 계시다면 IRS한테는 건드리지 마세요.\n\n# 8. MetaMask 스푸핑\n\n\n\n새로운 탈중앙화 플랫폼에 대해 들어봤니? 거기서 코인을 스테이킹해서 믿기 힘든 50% 수익을 올릴 수 있고, 원래 꿈이었던 집에 대한 계약금으로 원숭이 PNG를 살 수 있어!\n\n그래서 네가 최신 Pancake Swap과 Raydium 거래소에 로그인해. LP 토큰을 얻고 달콤한 스테이킹 리워드도 받기 시작해 — 가변 손실 때문에 궁극적으로 돈을 잃고 있는 걸 모르고 있지. 그런데 그건 그렇고.\n\n어느 날, MetaMask를 열어보니 모든 게 없어진 걸 발견해. 무슨 일이 일어난 거지?\n\n지난 목요일, 구글에서 클릭한 링크가 pancakeswap.finance가 아니라 exchange.pancakeswap.com이었다는 걸 깨달지 못했니? 사기꾼들이 페이지를 복제하고 그 날 구글 광고비를 지불해서 첫 번째 검색 결과로 만들었던 모양이야.\n\n\n\n![2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_14.png](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_14.png)\n\n그리고 읽지 않고 서명한 거래? 그래, 그것들에게 당신의 모든 저축에 대한 완전한 액세스 권한을 부여했어요. 안타깝죠!\n\n![2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_15.png](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_15.png)\n\n전문가 팁: 구글 링크를 통해 플랫폼 및 거래소에 접속하지 마세요. 항상 웹 사이트를 즐겨찾기로 저장하세요. 일상적으로 사용하는 브라우저와는 별도의 브라우저를 사용하여 암호화폐에 접속하세요 (Brave를 추천합니다). 암호화폐 브라우저에 랜덤한 확장 프로그램을 추가하지 마세요. 사용 중인 웹사이트의 URL을 항상 확인하세요. 그리고 반드시 서명하기 전에 거래 내용을 읽으세요.\n\n\n\n# 9. 너무 좋아서 믿기 어렵다면\n\nOK, 더 이상 탈중앙화 스테이킹은 없어요. 대신, 당신을 대신해 스테이킹을 해줄 수 있는 새로운 프라이빗 플랫폼을 발견했어요! 이전에도 몇 개 있었는데, Celsius, Block.Fi, FTX 같은 거 맞죠. 그들 사라진 건 뭐지? 🤔\n\n![Image](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_16.png)\n\n아니면 촌수가 먼 그렉이 인스타그램에서 쪽지를 줬는데, 마이애미 멘션에 사는 초록 람보르기니를 타고 다니는 20살 밀리어네어가 새로운 투자 기회를 제공한다고 한 건 어떨까요?\n\n\n\n모든 것은 하나의 공통점을 가지고 있습니다: 암호화폐 투자에 믿을 수 없는 20%의 수익을 약속합니다! 이것은 주택 융자 이자율의 2배입니다. 그렇다면 왜 집을 재담보로 해서 투자를 하지 않고 이자율의 차익에서 10%의 이익을 올리지 않을까요? 똑똑한 생각이네요!\n\n그러던 어느 날, 당신은 이를 만납니다.\n\n![이미지](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_17.png)\n\n축하합니다! 다음 5년 동안, 당신은 돈을 회수하기 위해 집단 소송을 추적하는 이메일을 수십 통 받게 될 것입니다 (돌아오지 않을 거에요, 변호사들이 가져갈 겁니다).\n\n\n\n오, 이메일 주의하세요! 법원이 원고 명단을 공개해야 했는데, 여기에는 여러분과 여러분의 이메일 주소가 포함되어 있어요. 이미 모든 저축을 잃은 사람들을 표적으로 하는 사기꾼들이 여러분을 노릴 수 있어요. 🤗\n\n![Top 10 Ways You Will Lose All Your Money in Crypto](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_18.png)\n\n팁: 이자율이 10%를 넘는 것은 대부분 사기일 가능성이 높아요. 아니라면, 임시적 손실 같은 낯선 개념에 돈을 잃을 수도 있어요. 조심하세요.\n\n# 10. 죽기\n\n\n\n![Top 10 Ways You Will Lose All Your Money in Crypto](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_19.png)\n\n알았어요! 당신은 암호화폐에 10년간 종사했고, 모든 종류의 사기, 러그 풀, 파산, 잃어버린 지갑, 훔긴 키, SIM 스왑, 해킹, 나쁜 거래, 시장 급락을 피한 채 성공했습니다. \n\n당신은 암호화폐로 수백만 달러를 벌었고, 모든 것을 안전하게 보호했습니다! 누구도 당신의 개인 지갑 키를 찾을 수 없어요, 오직 당신만이죠.\n\n그런데 그때, 당신은 버스에 치이고 말았습니다. 길가에서 죽음을 맞이할 때, 깨달음이 찾아왔어요: 누구도 당신의 개인 지갑 키를 찾을 수 없어요.\n\n\n\n당신의 부모님도 아니고, 부인도 아니고, 형제자매도 아니고, 자녀들도 아닌 사람들.\n\n그 모든 위험과 스트레스, 모든 노력이 당신과 함께 사라집니다. 아무 것도 남기지 않고 떠납니다 — 그것이 처음에 암호화폐에 참여한 이유였습니다.\n\n하지만 아마도 그런 일은 당신에게 일어나지 않을 것입니다. 결국 우리는 모두 무의식적으로 죽음은 다른 사람들에게만 일어난다는 것을 알고 있습니다. 당신은 젊고 불멸할 테니까요!\n\n전문 팁: 일부 회사들은 암호화폐 부동산 계획을 제공합니다. 그렇지 않으면 당신은 당신의 지갑 키를 유언에 추가하고 싶을 것입니다. 하지만 당신의 공증사가 그것들을 보지 못하도록 하세요! 가족이 아닌 사람들을 믿지 마세요. 이 정보를 안전 굴뚝에 잠글 수도 있습니다. 또는 가족에게 물리적 암호화 저장 장치를 제공하고 유언에 비밀번호를 남기는 방법도 있습니다.\n\n\n\n# 암호화폐는 왜 위험할까요?\n\n![Top 10 Ways You Will Lose All Your Money in Crypto](/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_20.png)\n\n암호화폐는 거래가 되돌릴 수 없기 때문에 무자비합니다.\n\n이것은 필요한 악입니다. 암호화폐는 새로운, 개방적이며 국경없고 자유로운 금융 시스템의 기초층이 되어야 합니다. 거래를 되돌릴 수 있다면 누구도 그것을 믿지 못할 것입니다.\n\n\n\n하지만 거래가 되돌릴 수 없다는 사실은 초보자들에게는 굉장히 어렵고, 사기꾼과 해커들에게는 매력적일 수 있습니다.\n\n이 기본 수준은 모두에 의해 사용되어질 목적은 아닙니다. 실수 없이, 사기가 없는 사용자 인터페이스는 아직 구축되지 않았습니다. 공정하게 말해, 그런 것들은 아마도 아직 10년 정도 멀리 떨어져 있을 것입니다.\n\n지금까지 10년 동안 이 공간에 있었습니다. 많은 친구들과 함께. 우리는 모두 똑똑하고 기술에 능숙합니다. 그럼에도 불구하고, 우리 중 한 명도 돈을 상당히 많이 잃었습니다. 몇몇은 수백만을 잃었습니다. 소수는 모든 것을 잃고 처음부터 다시 시작해야 했습니다. 이것이 거래소에 가입할 때 감수해야 할 리스크입니다.\n\n이것은 10년 전에 나도 가지고 싶었던 안전에 관한 글입니다. 이 내용이 유용하다고 느끼신다면, 부디 필요로 하는 초보자 친구들과 공유해주세요.✌️","ogImage":{"url":"/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_0.png"},"coverImage":"/assets/img/2024-05-05-Top10WaysYouWillLoseAllYourMoneyinCrypto_0.png","tag":["Tech"],"readingTime":10},{"title":"악세스 계층 관련성은 암호화폐의 새로운 빛나는 객체입니다","description":"","date":"2024-05-05 17:16","slug":"2024-05-05-Accountabstractionthenewshinyobjectincrypto","content":"\n\n## 하지만 그 대가가 그 가치를 상회할 만큼 우수할까요?\n\n---\n\n![Account Abstraction](/assets/img/2024-05-05-Accountabstractionthenewshinyobjectincrypto_0.png)\n\n---\n\n\"버드 앱에서 '계정 추상화'를 검색하면 현재 암호화폐에서 가장 핫한 제품 토론 중 하나를 찾을 수 있습니다.\n\n계정 추상화 (AA)에 대한 기대는 블록체인의 사용 편의성을 간단히 개선하는 데서부터 참된 대중 수용을 초래할 차원이 다른 새로운 기능의 해제에 이르기까지 다양합니다.\"\n\n\n\n가능성에 열광하지 않기가 어렵습니다. 그러나 AA의 실시간 예제를 살펴보니 혹은 현장에선 조금 과장된 것 같습니다.\n\n시드프레이즈를 가리기 위한 노력으로 제품 팀들은 개인 정보 보호에 대한 중요성에서 큰 타협을 해왔으며, 사용자들에게 투명하지 않거나 알 수 없는 제3자에게 신뢰를 두라고 요청했으며, 기존 지갑 표준과 호환되지 않는 키 관리 체계를 구축했습니다.\n\n물론, 지금은 아주 초기의 단계입니다.\n\n중요한 것은 현재의 노력을 이더리움의 중요 업그레이드 이후 가능한 것에 대한 희망과 구별하는 것입니다. 이 업그레이드는 어서 오지 않을까요.\n\n\n\n# 만들어진 것들\n\n전통적인 비보호지갑을 설정할 때 공개 키와 비공개 키의 쌍을 제공받습니다.\n\n송신자와 공개 키를 공유하여 자금을 받을 수 있지만, 보내기를 시작하려면 자신만이 갖고 있는 비밀 키를 인증(또는 서명)해야 합니다.\n\n이 지갑 소유권의 최상위 수준은 Externally Owned Account (EOA)로도 알려져 있습니다.\n\n\n\n## V1: iCloud\n\n한 가지 흔한 AA 형태는 사용자가 개인 키를 클라우드에 저장하고 사용자 이름과 암호로 인증하는 옵션을 제공합니다.\n\n이것이 실제로 AA의 일종인지에 대해 논란이 있을 수 있습니다. 하지만 나는 이것이 AA의 개념에 부합한다고 주장할 것입니다. 왜냐하면 사용자가 시드 구문을 쓰고 안전하게 보관할 필요가 없어지며 사용자가 익숙한 패턴을 통해 인증하고 개인 키를 복구할 수 있게 해주기 때문입니다.\n\n## V2: SSS\n\n\n\n최근 더 많이 보이는 고급 방법 중 하나는 Shamir Secret Sharing (SSS) 기술을 활용하는 것입니다.\n\n이 방법을 사용하면 개인 키가 여러 개의 \"키 공유\"로 분할되어, 전체 개인 키를 재구성하려면 일정한 임계값(일반적으로 3개 중 2개)에 인증해야 합니다.\n\n### 몇 가지 예시\n\n이러한 지갑은 여러 가지 형태와 일반적인 지갑 유형을 대표합니다.\n\n\n\nArgent은 iOS와 Android에서 사용 가능한 모바일 앱 지갑으로, 기본적으로 암호 화폐 자산을 저장하고 장기 보관하는 데 사용됩니다.\n\nBinance Smart Chain (BSC) Wallet은 브라우저 확장 프로그램으로, 바이낸스 스마트 체인과 해당 생태계의 dapp에 접근을 용이하게 합니다.\n\nSequence는 여러 체인을 지원하며 게임용으로 구축된 웹 지갑입니다.\n\n## Argent가 개인 키를 관리하는 방법\n\n\n\n![img](/assets/img/2024-05-05-Accountabstractionthenewshinyobjectincrypto_1.png)\n\nArgent을 사용하면 개인 키 관리에 두 가지 옵션이 있습니다:\n\n옵션 1 - iCloud 키 체인에 개인 키를 저장하고 생체 인증 또는 PIN을 사용하여 인증합니다.\n\n이 방법은 매우 편리하지만 이 경로를 선택하면 개인 키가 Apple에 저장되어 Apple 계정과 동일한 보안 취약점에 노출됩니다.\n\n\n\n그 결과, iCloud는 해커들에게 노출될 가능성이 훨씬 높아졌습니다. 어떤 사람은 사적인 키를 iCloud에 저장했기 때문에 꽤나 초라한 낚시 공격으로 $650,000을 잃은 케이스가 있었습니다.\n\n당신의 개인 정보 또한 위험에 노출됩니다. iCloud 계정과 관련된 모든 개인 식별 정보가 이제 당신의 개인 키와 연결되어 있습니다. 생체 인식을 사용한다면, 마치 DNA 샘플이 개인 키에 연결되어 있는 것과 같습니다.\n\n반면 개인 키 등의 숫자(원시 숫자)와 단어 조합(니모닉 시드구문)은 강요될 수 없으며 개인 식별 정보가 포함되어 있지 않습니다.\n\n\n\n## 옵션 2— SSS를 사용하여 개인 키를 세 개 이상의 키 쉐어로 분할하고 여러 관리자들 사이에 저장합니다.\n\n당신은 다음과 같은 엔티티들을 관리자로 사용할 수 있습니다:\n\n- 하드웨어 지갑 또는 다른 장치(예: 핸드폰)\n- 가족이나 친구의 장치(진정으로 신뢰하는 사람)\n- Argent 서버에 키 쉐어를 저장하는 Argent 보호자\n\n이것은 내가 본 v2 계정 추상화의 아마 가장 좋지 않은 구현 중 하나일지도 모릅니다.\n\n\n\n아이클라우드보다 설정하는 데 더 많은 노력이 필요하지만 익명의 가디언(하드웨어 지갑과 같은)을 사용하고 아르젠트의 가디언을 사용하지 않는다면 개인 정보 보호와 믿을 수 있는 방식으로 구성할 수 있습니다.\n\n당신이 원하는 만큼 많은 수의 가디언을 할당하고, 2개 중 3개, 3개 중 5개, 또는 10개 중 6개와 같이 자신만의 임계값을 정의할 수 있습니다.\n\n이렇게 아르젠트를 사용하는 주요 단점은 아쉽게도 생성한 지갑이 일반 지갑 표준을 사용하는 다른 비준관리 지갑과 호환되지 않는다는 것입니다.\n\n말하자면, 만약 아르젠트에 저축을 보관하고 30년 동안 사고로 잠수 있다가 돌아와서 지갑을 복구하려고 한다면, 아르젠트가 VC 자금이 다 떨어지고 폐업하지 않았으며 가디언 구성이 여전히 계정을 생성했을 때와 정확히 동작하는지를 바랄만 합니다.\n\n\n\n그렇지 않으면 답이 없습니다. 다른 지갑은 없는데, Argent처럼 키퉁분의 인증을 용이하게 하고 개인 키를 완벽하게 재구성하는 기능을 갖추고 있지요.\n\n신기하게도, Argent는 설정에서 시드 구문을 내보낼 수도 있어요. 그렇게 하면 해당 시드 구문이 다른 BIP-39 표준 지갑과 호환되지만, 시드 구문을 갖고 있는 사람은 SSS를 사용하여 설정한 가디언들을 완전히 우회할 수 있어요.\n\nArgent 팀은 사용자들에게 자체 관리 설정을 할 수 있는 다양한 옵션을 제공하여, 감사할 만한 일이라고 생각해요.\n\n각 개인이 어떤 저망을 선택할 것인지 판단하고 어떤 것이 최선인지 결정하는 것은 개인의 몫이에요.\n\n\n\n## BSC Wallet의 개인 키에 대한 접근 방식\n\n![BSC Wallet](/assets/img/2024-05-05-Accountabstractionthenewshinyobjectincrypto_2.png)\n\nArgent와 유사하게, Binance Smart Chain Wallet (BSC)은 사용자들이 Google Cloud에 개인 키를 저장하거나 SSS를 통해 안전하게 보호할 수 있는 옵션을 제공합니다.\n\n가디언은 \"인증 요소\"로 불리며, Argent에서와 동일한 방식으로 작동하지만 사용자는 키 공유가 저장되는 위치를 선택할 수 없습니다.\n\n\n\n- 첫 번째 공유물은 Google oAuth를 사용하여 인증된 Torus Network에 저장됩니다.\n- 두 번째 공유물은 Metamask가 개인 키를 저장하는 방식과 동일하게 BSC 크롬 익스텐션 클라이언트에 저장됩니다.\n- 세 번째 공유물은 바이낸스에 저장되며 사용자 이름과 비밀번호로 인증됩니다.\n\nArgent와 같이, 이는 사용자 이름과 비밀번호 패턴을 사용하여 Google에 개인 키를 저장하거나 바이낸스에 키를 공유하는 방식을 사용합니다.\n\n하지만 이에는 상당한 희생이 따릅니다:\n\nGoogle과 연결하는 것은 제공업체 (이 경우 바이낸스)가 해당 Google 계정에 연결된 개인 식별 정보에 액세스할 수 있게 합니다.\n\n\n\n이건 나한테나 많은 암호화폐 사용자들에게 말이 안 되는 일이야.\n\nBSC의 SSS 구현은 BSC 지갑에 특화되어 있어, 이 방식으로 만든 지갑은 다른 어떤 지갑과도 호환되지 않을 거야.\n\n마지막으로, 제 3개의 키 공유는 BSC에서 보관돼야 해서 바이낸스에 더 많은 의존성이 생기는 거야.\n\n## Sequence가 개인 키를 관리하는 방법\n\n\n\n![Account Abstraction: The New Shiny Object in Crypto](/assets/img/2024-05-05-Accountabstractionthenewshinyobjectincrypto_3.png)\n\n시퀀스의 온보딩 접근 방식은 사용자로부터 개인 키의 존재를 완전히 가려버리는 것입니다.\n\n처음에는 웹2 oAuth 옵션을 통한 로그인이 가능한데, 이로인해 개인 키가 클라우드에 저장된다고 생각했습니다.\n\n하지만 약관을 읽어보니 SSS를 사용하고 있다는 것을 깨달았습니다.\n\n\n\n\"당신의 지갑과 관련된 세 개의 개인 키가 있습니다. 지갑에 접근하려면 두 개의 개인 키가 필요합니다. 하나의 개인 키는 귀하의 장치에 로컬로 저장됩니다. 다른 하나의 개인 키는 귀하가 제공한 로그인 자격 증명을 사용하여 생성됩니다. 세 번째 개인 키는 Horizon에서 유지됩니다. 로그인 자격 증명을 사용하여 계정/지갑에 로그인하면 해당 계정에 액세스할 때 장치에 저장된 개인 키와 로그인 자격 증명과 관련된 생성된 개인 키를 사용합니다.\n\n이건 진짜 수상한데요.\n\n이용 약관을 읽는 소수의 사용자도 두 번째 키 공유가 어디에 저장되어 있는지 알 수 없습니다. 로그인 자격 증명을 사용하여 생성된다고 하지만 저장 위치는 명시되어 있지 않습니다. 그래서 세 번째 당사자가 누군지 알 방법이 없습니다.\n\n의심치 않는 사용자는 장치를 잃었을 경우 페이스북이나 구글 자격 증명을 사용하여 간단히 로그인할 수 있다고 생각할 수 있지만, 잃어버린 장치에 개인 키 공유 중 하나가 있다는 것을 모를 수도 있습니다.\"\n\n\n\n**계정 추상화 v3**\n\n암호화폐 관련자들이 AA에 대해 이야기할 때 대부분이 v1 또는 v2를 언급하는 것이 아니라 거의 이론적인 미래의 약속인 v3에 대해 언급하고 있습니다.\n\nv3를 이해하려면 EOA의 계층에서 한 단계 아래로 가야합니다. 거기서는 계약 계정(CA) 또는 스마트 계약 층이 나타납니다.\n\n\n\nCA를 이더리움 네트워크에 살아있는 애플리케이션으로 생각해 보세요. CA는 프로그래밍이 가능하고 다양한 흥미로운 작업을 할 수 있지만, 한 가지 할 수 없는 것은 거래를 초기화하는 것입니다.\n\n적어도 아직은요.\n\n비탈릭이 블로그 글에서 설명한 계정 추출의 미래 비전은 EOA와 CA를 병합하여 계약 계정이 거래를 시작할 수 있게 하는 것입니다.\n\n\"스마트 계약 코드가 [애플리케이션의 논리를 구현하는 데만 사용되는 것이 아니라, 개별 사용자의 지갑의 확인 논리(논스, 서명 등)를 구현하는 데도 사용될 것입니다.\" — Vitalik Buterin\n\n\n\n이 기능은 이론상으로 완전히 새로운 기능들을 열어줄 수 있어요. 일부 예시를 들자면 다음과 같아요:\n\n- 더 나은 소셜 회복 시스템들 — 제3자에 의존하지 않고, 다른 지갑들과도 역호환성을 가질 수 있어요\n- 멀티서명 계약 계정 — 한 거래에 대해 여러 당사자의 서명을 필요로 하여 추가적인 보안 층을 더할 수 있어요\n- 가스 수수료 추상화 — 스마트 계약이 tx 수수료를 지불할 필요한 작업들을 수행하고, 사용자가 송신자가 지불할지 수신자가 지불할지를 결정할 수 있도록 해줘요\n- 위임 가능한 계정들 — 스마트 계약을 통해 자동화/주기적 지불을 가능하게 해줄 수 있어요\n\n# v3 언제?\n\n현재 2계층들이 이를 선도하고 있으며, zkSync가 최근에 제한된 AA 기능 세트를 지원하는 도구군을 배포했어요.\n\n\n\nEthereum 메인넷은 너무 뒤지지 않는 것으로 보여지고 있습니다. AA를 통합하는 이더리움 개선 제안(EIP-4337)이 개발자들과 이더리움 커뮤니티로부터 많은 관심을 받고 있습니다.\n\n그럼에도 불구하고, 현재 zkSync의 기능은 많은 복잡성과 부담을 수반하고 있으며, 최근 CoinDesk에 의해 기록된 이더리움 레이어 2 체인의 내재적 위험도 존재합니다.\n\n레이어 2는 대부분의 암호화 자산이 기본적으로 레이어 2에 없기 때문에 UX 관점에서 여전히 번거로운 문제가 남아 있습니다.\n\n거래소에서 암호화 자산을 구입하거나 Moonpay나 Wyre와 같은 인기 있는 합법적 착륙장소에서 암호화 자산을 구입했던 경우, 해당 자산은 먼저 Ethereum 메인넷에서 유래하고, 레이어 2의 혜택을 누리기 위해서는 먼저 브리징되어야 합니다.\n\n\n\nEIP-4337나 멋지게 소개된 EIP-4844은 이 문제를 해결하는 데 아무런 영향을주지 않습니다.\n\n## 결론\n\n계정 추출의 첫 두 버전은 시드 프레이즈 고통점을 해결하려는 담대한 시도였지만, 자산을 장기 보관할 때 이러한 보관 모델은 너무 부서지기 쉽습니다.\n\n대중을 위한 더 나은 솔루션이 언젠가 나올 수 있지만, v1과 v2는 별개의 백업없는 준중앙화된 보관으로 거의 동일합니다.\n\n\n\n암호화폐의 핵심 가치 중 하나는 제3자의 의존이 없음을 강조한다.\n\n실제로, 특정 제3자가 10년, 20년 후에 여러분이나 여러분의 상속인이 개인 키를 회복하는 데 도와줄 것인지 알 방법이 없습니다.\n\n사용자 이름과 비밀번호를 갖는 편리함은 이러한 타협을 할 가치가 없다고 생각합니다.\n\nV3에 대해 진행된 발전은 획기적인 것으로 보입니다. AA 기술의 다음 진화는 분명히 주목할 가치가 있습니다.\n\n\n\n하지만 나는 아직 그것에 너무 많은 신뢰를 두는 것이 조기일 수 있다고 생각하며, 가까운 미래에 AA를 주요 차별화 요소나 전략적 장점으로 언급하는 프로젝트에 대해 개인적으로 회의적인 태도를 유지할 것입니다.\n\n---\n끝까지 읽어 주셔서 감사합니다. 나는 암호화폐 분야에서 일하며 항상 이에 대해 고민합니다. 저는 Twitter에서 @danajwright_를 찾을 수 있습니다.","ogImage":{"url":"/assets/img/2024-05-05-Accountabstractionthenewshinyobjectincrypto_0.png"},"coverImage":"/assets/img/2024-05-05-Accountabstractionthenewshinyobjectincrypto_0.png","tag":["Tech"],"readingTime":7},{"title":"BLAST L2 에어드랍을 받는 방법  튜토리얼","description":"","date":"2024-05-05 17:15","slug":"2024-05-05-HowtogetBLASTL2AirdropTutorial","content":"\n\n\n![Blast Airdrop](/assets/img/2024-05-05-HowtogetBLASTL2AirdropTutorial_0.png)\n\n# BLAST 에어드랍이란?\n\n블러 플랫폼 창립자 \"팩맨\"이 만든 새로운 이더리움 레이어 2 오퍼링인 블라스트가 공개 출시 전에 초대 전용 초기 액세스 캠페인으로 빠르게 주목을 받고 있습니다. 파라다임과 이걸 캐피탈 같은 최고의 암호 화폐 자금들이 투자한 블라스트는 이미 사적인 블라스트 커뮤니티 가입 및 에어드랍 계획에 대한 알려진 모든 내용을 다루는 이 가이드입니다.\n\n# 블라스트 레이어 2의 특별함\n\n\n\n\n다른 스케일링 솔루션과 다르게, Blast는 스테이크된 이더리움 및 안정 코인에 대한 내부 수익 기회를 제공합니다. 최대 30%의 APY까지 제공되며, 비토큰화 자산에 대해서도 매력적인 보상을 받을 수 있는 방법을 DeFi 사용자들에게 제공합니다. Blast는 또한 이더리움 전체의 NFT 유동성을 연결하는 주요 포털이 되고자 하며, 플랫폼으로 상당한 거래량을 유치할 계획입니다. 이러한 강력한 가치 제안과 주요 투자자의 후원을 받아, Blast는 상당한 상승 잠재력을 갖고 있습니다.\n\n![이미지](/assets/img/2024-05-05-HowtogetBLASTL2AirdropTutorial_1.png)\n\nBlast 에어드랍 이벤트 - 초대 받는 방법?\n\n현재 Blast에 액세스하려면 이미 커뮤니티의 일원인 다른 사용자로부터 초대 코드를 받아야 합니다.\n\n\n\n여기 BLAST 에어드랍에 참여할 수 있는 초대 코드 몇 개 있어:\n- SFA3G\n- DB4HD\n- 934HD\n\n\n\n4YSDH\n\n4HSJG\n\n**블라스트 에어드랍을 받으려면 어떻게 해야 하나요?**\n\n- BLAST 웹사이트를 방문하고 MetaMask와 같은 기본 ETH 지갑을 연결하세요.\n\n\n\n\n![How to get BLASTL2 Airdrop Tutorial 2](/assets/img/2024-05-05-HowtogetBLASTL2AirdropTutorial_2.png)\n\n- 이더리움 메인넷에서 ETH 또는 stablecoin을 브릿지하여 수익을 창출하십시오.\n\n![How to get BLASTL2 Airdrop Tutorial 3](/assets/img/2024-05-05-HowtogetBLASTL2AirdropTutorial_3.png)\n\n- 맞춤형 추천 코드로 친구들을 추천하여 에어드랍 마일스톤을 달성하세요!\n\n\n\n\n글로벌 커뮤니티에서 급부상 중인 블라스트 기술에 대해 알아보세요! 블라스트 공짜 토큰 분배에 참여하려면 빠르게 블라스트 초대장을 받아야 합니다. 지금 최대한 빨리 신청하세요! 🚀💰🔥","ogImage":{"url":"/assets/img/2024-05-05-HowtogetBLASTL2AirdropTutorial_0.png"},"coverImage":"/assets/img/2024-05-05-HowtogetBLASTL2AirdropTutorial_0.png","tag":["Tech"],"readingTime":2},{"title":"퍼퍼 파이낸스 테스트넷 노드를 운영하는 방법퍼퍼 파이낸스 테스트넷 노드를 운영하려면 다음 단계를 따르세요1 퍼퍼 파이낸스 웹사이트에 접속하여 Testnet 섹션을 찾습니다2 해당 섹션에서 노드를 운영하기 위한 다운로드 링크를 찾아 설치 파일을 다운로드합니다3 설치 파일을 실행하여 노드를 설치한 후 설정을 구성합니다4 퍼퍼 파이낸스 테스트넷에 연결하여 노드가 정상적으로 작동하는지 확인합니다이와 같은 간단한 단계를 따라 퍼퍼 파이낸스 테스트넷 노드를 성공적으로 운영할 수 있습니다","description":"","date":"2024-05-05 17:09","slug":"2024-05-05-HowtorunaPufferFinanceTestnetNode","content":"\n\n이 가이드에서는 Puffer Finance 노드를 Holesky Testnet Network에서 Security Signing 없이 실행하는 과정에 대해 안내해 드리겠습니다. Nimbus를 합의 클라이언트로 사용하고 Nethermind를 실행 클라이언트로 사용할 것입니다.\n\n# 요구 사항:\n\n운영 체제: Linux 64비트 (Ubuntu, Debian 등의 배포판 중 하나)\n\n프로세서: 이 가이드에서는 AMD 또는 Intel 프로세서를 사용할 것이며, ARM 프로세서도 호환 가능하지만 여기에서 다루지 않는 가이드에 대한 몇 가지 변경이 필요합니다.\n\n\n\n**시스템 요구 사항:**\n\n- 메모리: 16GB 이상\n- 디스크 공간: 1TB SSD (SATA 또는 NVMe) 이상\n- 네트워크: 신뢰할 수 있는 고속 인터넷. 이 프로세스를 원할하게 진행하기 위해 데이터 용량 제한이 있는지 여부를 인터넷 제공업체나 서버 제공업체와 확인해보세요. 가능하면 제한 없이 사용하는 것이 좋습니다.\n\n본 안내서에서는 특히 Ubuntu 22.04를 사용할 것입니다.\n\n\n\n# 지정된 지갑 설정하기\n\n먼저, Metamask를 통해 기존 지갑을 선택하거나 새 지갑을 생성해야 합니다.\n\n- 이 과정을 진행하기 위해 이미 지정된 지갑을 보유하고 있다면 해당 지갑 주소와 개인 키를 손에 쥘 준비를 해주세요.\n\n- 지갑이 없다면 Metamask를 사용하여 새로 만들고, 마찬가지로 해당 지갑 주소와 개인 키를 손에 쥘 준비를 해주세요.\n\n\n\n**이 가이드에서는 안내를 위해 예시 지갑을 사용할 것입니다. 하지만 사용할 때는 여러분이 사용할 지갑 주소와 개인 키로 바꿔야 함을 명심해 주세요.**\n\n예시 지갑 주소: `0xB0551d678a6746F2Cf300CF698d314EA1e74e3c7`\n\n예시 지갑 개인 키: `9825b255c5a7bf027237140ebb86e11970027467d08f6a2ad84f02b6665b1f30`\n\n# PC 또는 서버 설정하기\n\n\n\n이 가이드에서는 aeza.net의 전용 서버를 사용할 것입니다. 구성은 다음과 같습니다:\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_0.png)\n\n해당 서버를 확인하고 싶다면, 등록 후에 이 링크를 사용하여 잔액을 입금하면 추가로 15%의 보너스를 받으실 수 있습니다. 이 보너스는 24시간 동안 유효합니다: [https://aeza.net/?ref=431568](https://aeza.net/?ref=431568)\n\n저희는 이 테스트넷 노드를 적어도 2~3개월간 운영할 계획이며, 이 링크를 통해 다음 달 결제 시 15%를 절약할 수 있습니다. AEZA를 통해 여러 가지 암호화폐 또는 국제 신용 또는 체크 카드로 stripe를 통해 지불할 수 있습니다. 따라서 다양한 결제와 서버 옵션 중에서 선택하실 수 있습니다.\n\n\n\n그러나이 프로세스를 수행하는 데 필요한 요구 사항을 충족하는 서비스 또는 하드웨어를 자유롭게 사용할 수 있습니다.\n\n# 서버에 연결\n\n서버에 액세스할 자격 증명을 획득하면 SSH 클라이언트가 필요합니다. Windows 용으로는 Putty 또는 Solar Putty와 같은 무료 소프트웨어를 사용하거나 MacOs 시스템의 터미널을 사용할 수 있습니다.\n\n본 가이드에서는 Windows 기기의 Solar Putty를 통해 실행할 것이며, 무료이면서 동일한 창에서 여러 터미널을 실행할 수 있는 더 나은 접근성 옵션을 제공하므로 후속 프로세스에 도움이 되기 때문입니다. 그러나 걱정 마세요. 필요한 경우 MacOs에서 실행하는 방법도 안내해 드릴 겁니다.\n\n\n\n링크:\n\nPutty: [Putty 다운로드](https://www.putty.org/)\n\nSolar Putty: [Solar Putty 다운로드](https://www.solarwinds.com/es/free-tools/solar-putty)\n\nSolar Putty\n\n\n\nSolar Putty를 올바르게 설치했으면, 이제 열어주세요. 서버 IP를 바에 붙여넣고 Enter 키를 누르세요.\n\n![image1](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_1.png)\n\n이렇게 하면 다음 화면이 표시됩니다:\n\n![image2](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_2.png)\n\n\n\n여기에 사용자 이름과 비밀번호를 입력하고 서버 제공 업체는 서버에 액세스하기 위해 필요한 모든 자격 증명을 제공할 것입니다. 자격 증명을 얻으려면 이메일을 확인하거나 공급 업체 웹 사이트를 방문하여 회원 영역에 액세스하십시오.\n\n로그인을 정확하게 완료하면 터미널이 다음과 같이 보일 것입니다:\n\n![terminal screenshot](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_3.png)\n\n터미널이 그림과 같이 보인다면, 준비된 것입니다!\n\n\n\n맥OS 터미널\n\n맥OS 사용자는 터미널을 열고 다음을 입력한 후 엔터 키를 누르세요:\n\n```js\nssh [서버 사용자명]@[서버 IP]\n```\n\n```js\n예시:\n\nssh root@12.34.567.890\n```\n\n\n\n올바르게 하면 비밀번호를 입력하라는 메시지가 나타납니다. 비밀번호를 입력해주세요. MacOS에서는 보안 상의 이유로 비밀번호를 입력할 때 입력 내용이 표시되지 않지만 걱정하지 마세요. 천천히 한 글자씩 입력한 후 엔터를 누르면 됩니다.\n\n올바르게 입력했다면 다음과 같이 표시될 것입니다:\n\n![2024-05-05-HowtorunaPufferFinanceTestnetNode_4](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_4.png)\n\n# 퍼퍼 코랄-Cli에 대한 종속성 설치\n\n\n\n이번 단계에서는 몇 가지 종속성을 설치해야 합니다:\n\n아래 코드 라인을 복사하여 터미널에 붙여넣기하세요. Windows를 사용 중이라면 터미널에서 마우스 오른쪽 클릭으로 붙여넣기하고, MacOs를 사용 중이라면 Command + V로 붙여넣을 수 있습니다.\n\n```js\nsudo apt update\nsudo apt install build-essential curl\n```\n\n붙여넣기한 후 Enter 키를 누르면 어느 시간 후에 터미널에서 다음을 표시합니다:\n\n\n\n![How to run a Puffer Finance Testnet Node Step 5](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_5.png)\n\n\"Y\"를 입력하고 엔터 키를 누릅니다.\n\n필요한 패키지를 다운로드하고 설치한 후, 다시 다음과 같은 터미널이 표시됩니다.\n\n![How to run a Puffer Finance Testnet Node Step 6](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_6.png)\n\n\n\n그 다음, 터미널에 이 코드를 붙여넣고 엔터를 누르세요:\n\n```js\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\n그러면 이렇게 나타날 거에요:\n\n![이미지](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_7.png)\n\n\n\n여기서는 그냥 엔터를 누르고 패키지를 다운로드하고 설치하도록 하세요.\n\n이후에 터미널에 이 코드를 붙여넣고 엔터를 누르세요:\n\n```js\nsource $HOME/.cargo/env\n```\n\n어떤 프롬프트도 표시되지 않겠지만 걱정하지 마세요, 무언가가 변경되었습니다.\n\n\n\n이제 이 코드를 붙여넣고 Enter 키를 누르세요:\n\n```bash\necho \"export PATH=\\\"$HOME/.cargo/bin:$PATH\\\"\" >> ~/.bashrc\nsource ~/.bashrc\n```\n\n터미널이 \"source ~/.bashrc\" 코드 라인을 표시하면 준비가 된 것입니다.\n\n이 작업 후에 터미널에 다음 코드를 붙여넣고 Enter 키를 누르세요:\n\n\n\n```js\nrustc --version\n```\n\n터미널에서 다음과 같은 내용을 보여주어야 합니다:\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_8.png)\n\n만약 숫자 1.77.2가 달라도 걱정하지 마세요. 여러분의 rust 버전이 달라도 괜찮습니다. 이 과정에 특정 버전이 필요하지 않기 때문에 코드가 표시되면 진행할 수 있습니다!\n\n\n\n다음으로, Puffer Coral-CLI를 실행하기 위해 더 많은 종속성이 필요합니다. 이제 터미널에 다음을 붙여넣고 Enter 키를 눌러주세요:\n\n```js\nsudo apt update\nsudo apt install libssl-dev pkg-config\n```\n\n다운로드가 완료되면 서버에서 아마 이것을 보여줄 겁니다:\n\n![Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_9.png)\n\n\n\n텍스트 형식으로 바꾸면 다음과 같습니다:\n\n\n![How To Run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_10.png)\n\n\n탭을 눌러 \"확인\" 옵션으로 이동한 다음 Enter 키를 누릅니다. 이후 터미널로 돌아가서 다음 코드를 붙여 넣고 Enter 키를 누르면 됩니다. 응답을 요구하지 않지만 걱정하지 마세요, 뭔가가 변경되었습니다.\n\n\n\n\n\n\n그런 다음이 코드로 동일한 작업을 수행합니다. 아무 응답이 표시되지는 않지만 필요한 변경 사항을 적용할 것입니다:\n\n\necho ‘export OPENSSL_DIR=/usr/include/openssl’ >> ~/.bashrc\nsource ~/.bashrc\n\n\n다시 한 번 이 라인도 같은 방법으로 처리해주세요:\n\n\n\n\n```sh\nexport OPENSSL_LIB_DIR=/usr/lib/x86_64-linux-gnu\nexport OPENSSL_INCLUDE_DIR=/usr/include/openssl\n```\n\nAnd now add the following lines to your `.bashrc` file:\n\n```sh\necho 'export OPENSSL_LIB_DIR=/usr/lib/x86_64-linux-gnu' >> ~/.bashrc\necho 'export OPENSSL_INCLUDE_DIR=/usr/include/openssl' >> ~/.bashrc\nsource ~/.bashrc\n```\n\nOnce you've completed these steps, let's verify that our installations were successful. Type the following code into the terminal and press Enter:\n\n\n\n\n```js\npkg-config --version\n```\n\n그런 다음 아래 내용을 붙여넣고 엔터 키를 누르세요:\n\n```js\npkg-config --libs openssl\n```\n\n터미널은 이렇게 보일 것입니다:\n\n\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_11.png)\n\nIf it looks like this, we are good to go. As I previously mentioned, don't worry if your version numbers are different. As long as the terminal prompts these lines, it means we have installed our libraries correctly.\n\nWe are done here with dependencies, for now...\n\nSetting up Puffer Coral-Cli\n\n\n\n지금 파일들을 더 조직적으로 정리하기 위해 \"puffer\"라는 폴더를 생성해볼게요. 터미널에서 아래 명령어를 입력하여 폴더를 생성하세요:\n\n```js\nmkdir puffer\n```\n\nmkdir은 \"Make directory\"의 약자로, 새로운 디렉토리를 생성하는 명령어입니다.\n\n이제 디렉토리를 만들었지만, 그 안으로 이동하려면 다른 명령어를 입력해야 해요.\n\n\n\n`cd puffer`\n\n\"cd\"란 “Change Directory”의 약자로 현재 작업 중인 디렉토리를 변경하는 명령어입니다.\n\n위 명령을 실행하고 나면 터미널 화면은 다음과 같아야 합니다:\n\n![](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_12.png)\n\n\n\n이제 여기 있으면, 이 코드를 터미널에 붙여넣고 엔터를 눌러주세요:\n\n```js\ngit clone https://github.com/PufferFinance/coral\n```\n\n터미널에서 위 명령을 입력하면 coral-cli 파일이 이 폴더에 복제됩니다.\n\n이제 이것을 터미널에 입력하고 엔터를 눌러주세요:\n\n\n\n```js\nls \n```\n\n![How to Run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_13.png)\n\n현재 위치한 디렉토리의 파일과 디렉토리를 보여주는 명령어입니다. 현재 이 폴더 안에는 \"coral\"이라는 유일한 디렉토리가 있습니다. 따라서 터미널에 이 명령어를 입력하고 Enter 키를 누르면 이 폴더로 이동할 수 있습니다.\n\n```js\ncd coral\n```\n\n\n\n한 번 여기에 들어오면 터미널에 이것을 입력하고 엔터를 누르세요:\n\n```js\ncargo build --release\n```\n\n![Puffer Coral-Cli](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_14.png)\n\n이렇게 하면 Puffer Coral-Cli의 모든 파일을 빌드하는 작업이 시작됩니다. 하드웨어 스펙에 따라 시간이 다소 소요될 수 있습니다.\n\n\n\n\n![How to run a Puffer Finance Testnet Node 15](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_15.png)\n\nOnce it's done building the files, your terminal should look like this:\n\n![How to run a Puffer Finance Testnet Node 16](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_16.png)\n\nYou should see \"Finished\" as displayed on the last green line.\n\n\n\n\n만약 다음을 입력하고 엔터 키를 누르면:\n\n```js\nls\n```\n\n이제 puffer/coral/ 디렉토리는 다음과 같아야 합니다:\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_17.png)\n\n\n\n만약에 위와 같이 보인다면, 다음 단계로 준비가 된 것이며 검증자 키를 생성할 것입니다.\n\ncoral-cli를 빌드하는 동안 에러가 발생하는 경우\n\n만약이 프로세스 중에 라이브러리나 의존성을 놓친 경우에 에러가 나타나면, 다시 의존성 섹션으로 가서 모든 것을 올바르게 설치했는지 확인한 후 이 디렉토리로 돌아와서 다시 빌드를 시도하기 전에 다음 명령을 입력하고 엔터를 눌러주세요:\n\n```js\ncargo clean\n```\n\n\n\n이전 빌드를 정리할 거에요. 빌드를 다시 하려면 \"cargo build -- release\" 명령어를 한 번 더 입력해서 보내주세요.\n\n# 밸리데이터 키 만들기\n\n지금 /puffer/coral/ 디렉토리에 있는 동안에 다음 명령어를 입력하고 엔터를 눌러봐요:\n\n```js\nnano\n```\n\n\n\n이것은 다음과 같이 텍스트 에디터가 열릴 것입니다.\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_18.png)\n\n여기서는 밸리데이터 키를 위한 비밀번호를 작성하려고 합니다. 마음에 드는 비밀번호를 생성해 주세요. 이 비밀번호는 아무에게도 공유하지 말아 주시기 바랍니다.\n\n저는 이 비밀번호를 예시로 사용하겠습니다:\n\n\n\n\n![2024-05-05-HowtorunaPufferFinanceTestnetNode_19](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_19.png)\n\nAfter entering your password, press Ctrl+O. If you are using MacOS, remember to use the \"control\" key, not the \"command\" key. You will see the following at the bottom of the text editor:\n\n![2024-05-05-HowtorunaPufferFinanceTestnetNode_20](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_20.png)\n\nType \"password.txt\" (without the quotation marks) and press Enter. This will display: \n\n\n\n\n![File](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_21.png)\n\n지금 puffer/coral/ 디렉토리에 비밀번호가 적힌 파일을 만들었습니다. 이제 Ctrl+X를 누르면 터미널로 다시 돌아옵니다. 터미널에 들어가서 파일이 제대로 생성되었는지 확인해봅시다. 다음 명령어를 입력해 엔터를 눌러주세요:\n\n```js\nls\n```\n\n아래에서 보듯이 비밀번호.txt 파일이 이제 디렉토리에 있습니다.\n\n\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_22.png)\n\nTo generate our registration.json file, follow these steps:\n\n1. Once we have completed the file generation process, visit https://launchpad.puffer.fi/Setup to obtain the command needed to create our validator key.\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_23.png)\n\n\n\n사이트가 Metamask에 연결을 요청할 것입니다. 연결하기 전에 특별히 이 목적으로 만든 지갑이나 계정에 있는지 확인해주세요. 만약 Metamask에 Holesky Testnet 네트워크를 추가하지 않았다면, 네트워크를 추가하라는 메시지가 표시될 것입니다. \"네트워크 추가\"를 클릭하면 괜찮습니다.\n\n그렇지 않다면, 이미 추가했지만 다른 체인에 있었다면, 지갑을 Holesky Testnet으로 변경하라는 메시지가 나타날 것입니다. 변경하면 됩니다.\n\n이 작업을 완료한 후, 페이지가 다음과 같이 보일 것입니다:\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_24.png)\n\n\n\n안녕하세요! 이 가이드에서는 Enclave를 사용하지 않을 것이므로 여기에서 끄는 것을 잊지 마세요. 한편, 이제 우리에게 명령이 생겼습니다. 이 명령을 복사하여 메모장, 워드, 페이지, 문서 또는 비주얼 스튜디오 코드와 같은 원하는 텍스트 편집기에 붙여넣어주세요. 거기에 Enclave를 사용하지 않는다는 걸 기억하세요.\n\n이 명령어에서 변경해야 할 부분이 있습니다. 알아보기 쉽도록 이 두 부분을 수정해야 합니다:\n\n`키스토어_비밀번호_파일_경로` `등록_JSON_파일_경로`\n\n\n\n`PATH_TO_A_KEYSTORE_PASSWORD_FILE` → password.txt `PATH_TO_REGISTRATION_JSON` → registration.json\n\nRemember, `password.txt` was the file we created a few steps ago, and `registration.json` is the file that will be generated in the `puffer/coral/` directory. We will need this file in a few steps ahead.\n\nAfter making these modifications, copy the command and paste it into your terminal in the `puffer/coral/` directory. Then hit enter. The command will appear as follows:\n\n\n\n\n![Step 1](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_25.png)\n\n\nOnce you've completed that, your terminal will resemble:\n\n\n![Step 2](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_26.png)\n\n\nIf you see that, you're all set. We will revisit this directory later in the process.\n\n\n\n이제 puffer coral-cli를 사용하여 검증자 키를 준비했으니, 합의 및 실행 클라이언트를 설치하고 구성해야 합니다.\n\n# 합의 클라이언트 설정\n\n이 가이드에서는 합의 클라이언트로 Nimbus를 사용할 것입니다. 따라서 터미널에서 다음 명령을 작성하고 실행하여 메인 디렉토리로 돌아가겠습니다:\n\n```js\ncd\n```\n\n\n\n새로운 dependencies와 라이브러리를 설치해야 하므로 터미널에 다음 명령어를 붙여넣고 엔터를 눌러주세요:\n\n```js\nsudo apt-get install build-essential git-lfs cmake\n```\n\n이렇게 보일 거에요:\n\n![Command](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_27.png)\n\n\n\nY\n![2024-05-05-HowtorunaPufferFinanceTestnetNode_28.png](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_28.png)\n\n![2024-05-05-HowtorunaPufferFinanceTestnetNode_29.png](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_29.png)\n\n좋아요. 이제 다시 메인 디렉토리로 이동할 것입니다. 여기서는 이 명령을 실행해야 합니다.\n\n\n\n```shell\nopenssl rand -hex 32 | tr -d \"\\n\" > \"/tmp/jwtsecret\"\n```\n\n터미널에 아무 프롬프트도 표시되지 않을 것입니다. 이 명령은 우리의 `/tmp/` 디렉토리에 \"jwtsecret\"이라는 파일을 생성합니다. 지금 접근해야 할 것이죠. 접근하기 위해 다음을 실행합니다:\n\n```shell\ncd /tmp/\n```\n\n이 명령은 우리를 `/tmp/` 디렉토리로 이동시켜 줍니다. 여기서 우리는 다음 명령을 실행하고 싶습니다.\n\n\n\n```js\n나노 jwtsecret\n```\n\n이렇게 보이게 될 거예요:\n\n![이미지](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_30.png)\n\n거기 보이는 숫자들은 비밀 키이지만, 기억해 주셔야 할 점은 우리가 지정한 지갑의 개인 키를 사용하려는 것이기 때문에, 여기서 해야 할 일은 지갑의 개인 키를 붙여 넣는 것입니다. 그러니 거기에 있는 숫자를 삭제하고, Windows에서는 오른쪽 클릭, MacOS에서는 Command+V를 통해 개인 키를 텍스트 편집기에 붙여 넣으세요. 이전에 보여 드린 것처럼, 저의 예시 개인 키는 \"9825b255c5a7bf027237140ebb86e11970027467d08f6a2ad84f02b6665b1f30\" 이므로, 그것을 거기에 붙여 넣을 겁니다.\n\n\n\n\nPrivate Key를 올바르게 붙여넣은 후에 Ctrl+O를 누르고 Enter를 누르고 Ctrl+X를 눌러주세요. 이렇게 하면 파일에 적용한 변경 사항을 저장한 후 터미널로 돌아갈 수 있습니다.\n\n이 작업을 완료한 후에 우리는 메인 디렉토리로 돌아가고 싶습니다. 이를 위해 터미널에 다음 명령을 입력하고 Enter를 누르세요:\n\n```js\ncd\n```\n\n메인 디렉토리에 도착하면 다음 명령을 실행해야 합니다.\n\n\n\n```bash\ngit clone https://github.com/status-im/nimbus-eth\n```\n\n이 명령어를 사용하면 nimbus 저장소를 우리의 컴퓨터에 복제할 수 있습니다. 이 작업을 완료했으면 nimbus 디렉토리로 이동하기 위해 아래 명령어를 입력하세요:\n\n```bash\ncd nimbus-eth2\n```\n\n이 프로세스를 마치면 터미널이 이렇게 보여야 합니다:\n\n\n\n![How to Run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_31.png)\n\nNow, let's copy and paste this command into our terminal and hit Enter:\n\nReplace the X with the amount of RAM you wish to allocate for this task. For systems with 4GB of memory or less, simply remove the “-jX” parameter.\n\nFor instance, if your machine has 128GB RAM, you can set X to 12. Similarly, if your machine has 16GB RAM, you can set X to 8. The process may take some time, so the suggested amount is 12, but the ideal value depends on your system. In my case, I will use 12.\n\n\n\n```js\nmake -jX nimbus_beacon_node\n```\n\n명령을 실행하면 터미널이 다음과 같이 나타납니다:\n\n![How to Run a PufferFinance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_32.png)\n\n이전에 말씀드렸듯이 이 과정은 시간이 조금 걸릴 수 있으니 그냥 필요한 것을 모두 빌드할 수 있도록 하시면 됩니다.\n\n\n\n한번 작업을 마치면, 아래와 같이 보일 것입니다:\n\n\n![Image](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_33.png)\n\n\n이 작업을 마치면, 합의 클라이언트를 동기화해야 합니다. 보통 걸리는 시간을 줄이기 위해 신뢰할 수 있는 노드에서 신뢰할 수 있는 동기화를 수행할 것입니다. 이를 위해 다음 명령어를 실행할 것입니다:\n\n```js\nbuild/nimbus_beacon_node trustedNodeSync \\\n  --network:holesky \\\n  --data-dir=build/data/shared_holesky_0 \\\n  --trusted-node-url=https://holesky-checkpoint-sync.stakely.io/\n```\n\n\n\n이제 당신의 터미널은 이렇게 보일 것입니다:\n\n![Terminal Screenshot](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_34.png)\n\n그리고 끝나면 이 메시지가 표시됩니다:\n\n![Terminal Screenshot](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_35.png)\n\n\n\n요청한 작업을 마치고 나서는 다음 몤령을 실행해야 합니다:\n\n우선, 해당 명령어에서 \"WALLET_ADDRESS\"를 여러분의 지갑 주소로 바꿔야 합니다.\n\n```js\n./run-holesky-beacon-node.sh --web3-url=http://127.0.0.1:8551 --suggested-fee-recipient=WALLET_ADDRESS  --jwt-secret=/tmp/jwtsecret\n```\n\n이 가이드에서 사용 중인 예제 주소는 다음과 같습니다: 0xB0551d678a6746F2Cf300CF698d314EA1e74e3c7\n\n\n\n그래서 나는 그것을이 주소로 대체하겠고 내 것은 이렇게 보일 거야 (하지만 당신 것은 대신 당신의 지갑 주소여야 함):\n\n```js\n./run-holesky-beacon-node.sh --web3-url=http://127.0.0.1:8551 --suggested-fee-recipient=0xB0551d678a6746F2Cf300CF698d314EA1e74e3c7  --jwt-secret=/tmp/jwtsecret\n```\n\n수정한 후에 이것을 복사하여 터미널에 붙여넣고 실행하면 다음과 같이 보일 것입니다:\n\n![How to Run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_36.png)\n\n\n\n이렇게 보이기를 기다려주세요:\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_37.png)\n\n노드 동기화를 일단 중지해주세요. 나중에 다시 완료할게요.\n\n이제 퍼퍼 검증자 키 경로로 이동해야 해요. 여기서 바로 이동하려면 이 명령어를 사용하세요:\n\n\n\nTo get to the puffer validator keys path, type the following command in your terminal:\n\n```bash\ncd ~/puffer/coral/etc/keys/bls_keys\n```\n\nThen, inside this directory, run:\n\n```bash\nls\n```\n\nYou will see a file with a long string of numbers and letters. This file needs to be copied to 2 paths on our consensus client. Let's begin.\n\n\n\n먼저 파일 이름을 복사하세요. 마우스를 사용하여 파일 이름을 선택한 후, Windows에서는 Ctrl+C를 사용하고, MacOs에서는 Command+C를 사용하세요. 복사한 후에는 현재 메모장이나 Notes와 같은 텍스트 편집기에 붙여넣기하세요. Windows에서는 터미널에 \"^C\"가 표시될 수 있지만 걱정하지 마세요. 아무 영향을 미치지 않습니다.\n\n이 작업을 완료한 후에 이 명령을 실행하기 전에 명령을 수정해야 합니다.\n\n\"REPLACE\"를 파일 이름으로 변경해야 합니다.\n\n```js\ncp -v ~/puffer/coral/etc/keys/bls_keys/REPLACE ~/nimbus-eth2/build/data/shared_holesky_0/validators/\n```\n\n\n\n예를 들어 파일 이름이 다음과 같다고 가정해봅시다: 7742nh471h20471h2409127943h021947h012947h0129834b8213g0d2jds0921dhn721908ed721dd021987h21dhd0\n\n그렇다면 최종 명령어는 다음과 같이 보일 것입니다:\n\n```js\ncp -v ~/puffer/coral/etc/keys/bls_keys/7742nh471h20471h2409127943h021947h012947h0129834b8213g0d2jds0921dhn721908ed721dd021987h21dhd0 ~/nimbus-eth2/build/data/shared_holesky_0/validators/\n```\n\n수정이 완료되면 터미널에 붙여넣고 실행하세요. 이 명령어를 실행하면 파일이 첫 번째 디렉토리로 복사되며, 터미널은 디렉토리를 표시하는 프롬프트를 표시할 것입니다.\n\n\n\n자 이제 해당 파일을 다음 디렉토리로 복사하기 위해 방금 사용한 명령어를 다음과 같이 수정해야 합니다:\n\n```bash\nmkdir ~/nimbus-eth2/validator_keys/ && cp -v ~/puffer/coral/etc/keys/bls_keys/7742nh471h20471h2409127943h021947h012947h0129834b8213g0d2jds0921dhn721908ed721dd021987h21dhd0 ~/nimbus-eth2/validator_keys/keystore.json\n```\n\n그런 다음, 저희는 puffer coral-cli를 통해 생성한 키를 사용하여 동기화 및 실행할 준비가 된 합의 클라이언트를 가지게 되었어요. 하지만 이 작업은 나중에 처리할 거예요. 지금은 실행 클라이언트를 설정해야 합니다. 실행 클라이언트는 합의 클라이언트와 함께 동기화되어 실행되어야 합니다.\n\n이 작업을 마치면 다음 명령어를 실행하여 주요 디렉토리로 돌아갑니다:\n\n\n\n```js\ncd\n```\n\n# 실행 클라이언트 설정\n\n이 가이드에서는 실행 클라이언트로 Nethermind를 사용할 것이므로 필요한 종속성을 설치하고 작업을 완료해보겠습니다.\n\n먼저 다음 명령을 실행해야 합니다.\n\n\n\n```js\nwget https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\nsudo dpkg -i packages-microsoft-prod.deb\n```\n\n그런 다음 다음 명령어들을 실행하세요:\n\n```js\nsudo apt-get update\nsudo apt-get install dotnet-sdk-8.0 dotnet-runtime-8.0\n```\n\n![이미지](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_38.png)\n\n\n\n\n![그림 설명](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_39.png)\n\n![그림 설명](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_40.png)\n\n닷넷 설치가 제대로 되었는지 확인하기 위해 터미널에서 아래 명령어를 실행해봅시다:\n\n```js\ndotnet --list-sdks\ndotnet --list-runtimes\n```\n\n\n\n자 그럼 다음 단계로 넘어가볼게요. 우리는 실행 클라이언트를 우리의 기계로 클론할 준비가 돼 있어요. 이를 위해 메인 디렉토리에서 다음 명령을 실행할 거에요:\n\n```js\ngit clone https://github.com/NethermindEth/nethermind.git\n```\n\n\n\n클론이 완료될 때까지 기다렸다가 이 명령어를 사용하여 디렉토리를 nethermind의 src 폴더 내의 Nethermind 폴더로 변경합니다:\n\n```js\ncd nethermind/src/Nethermind/\n```\n\n여기에 들어가면 이 명령어를 실행해야 합니다:\n\n```js\ndotnet build Nethermind.sln -c Release\n```\n\n\n\n그리고 모든 필요한 파일을 만들면 다음과 같이 보일 것입니다:\n\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_42.png)\n\n\n작업이 완료되면 다음과 같이 보일 것입니다:\n\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_43.png)\n\n\n\n\n이제 실행 클라이언트를 실행할 준비가 되었습니다. 그러나 먼저 합의 및 실행 클라이언트를 실행하기 전에 몇 단계를 거쳐야 합니다.\n\n# Hodlsky 테스트넷 ETH 수령하기\n\n우리의 지정된 지갑을 테스트넷 ETH로 자금을 조달해야 합니다. 이를 위해 다음 POW Faucet을 사용할 것입니다: [Hodlsky Faucet](https://holesky-faucet.pk910.de/)\n\n\n\n지갑 주소를 붙여넣기하고 채굴 시작을 클릭하면 다음과 같이 로딩됩니다:\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_45.png)\n\n여기서 2시간 정도 후에는 적어도 36 ~ 40 Holesky ETH를 얻게 됩니다. 이런 금액을 얻으면 “채굴 중지”를 클릭한 후 “보상 청구”를 클릭하면 시스템이 자동으로 귀하의 지갑으로 자금을 전송합니다. 이것은 테스트넷 토큰이므로 통화 가치는 없습니다.\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_46.png)\n\n\n\n헐스키 이더리움을 얻는 유일한 방법은 아닙니다. 다른 수도꼭지를 사용하거나 다른 지갑에 있는 헐스키 이더리움을 사용할 수도 있습니다. https://www.holeskyeth.org/buy-holesky-eth 같은 유료 서비스도 있습니다. 약 13달러에 50개의 헐스키 이더리움을 얻을 수 있어요. 따라서 전체 과정을 가속화할 시간이나 돈을 사용할 의향이 있는지에 따라 다릅니다. 돈을 보내기 전에 꼭 직접 조사를 해야 하며, 여기서는 단지 헐스키 이더리움을 얻는 다양한 방법과 예시를 제공할 뿐이니, 혹시 발생하는 모든 일은 본인의 책임 하에 이루어져야 합니다.\n\n# 헐스키 런치패드 등록\n\n지갑에 최소 36개에서 40개의 헐스키 이더리움이 있다면, 우리는 Holesky 런치패드에 가서 발행자를 등록해야 합니다.\n\n[Holesky 런치패드](https://holesky.launchpad.ethereum.org/en/)로 이동하세요.\n\n\n\n![2024-05-05-HowtorunaPufferFinanceTestnetNode_47](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_47.png)\n\n![2024-05-05-HowtorunaPufferFinanceTestnetNode_48](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_48.png)\n\n![2024-05-05-HowtorunaPufferFinanceTestnetNode_49](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_49.png)\n\n![2024-05-05-HowtorunaPufferFinanceTestnetNode_50](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_50.png)\n\n\n\n![screenshot](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_51.png)  \n이제 스테이킹 예금 CLI를 설치하여 예금 데이터를 생성해야 합니다. 이를 위해 메인 디렉토리로 돌아가는 다음 명령어를 실행해주세요:\n\n```js\ncd\n```\n\n그런 다음 다음 명령어를 실행하여 새 디렉토리를 생성해보세요.\n\n\n\n```sh\nmkdir stakingdepositcli\ncd stakingdepositcli\n```\n\n새 디렉토리를 만들고 현재 디렉토리를 해당 디렉토리로 변경합니다. 이제 다음 명령어를 사용해야 합니다:\n\n```sh\nwget -O sdc.tar.gz https://github.com/ethereum/staking-deposit-cli/releases/download/v2.7.0/staking_deposit-cli-fdab65d-linux-amd64.tar.gz\n```\n\n참고: 이 패키지는 인텔 또는 AMD x64 프로세서를 사용하는 Linux 기기에서만 작동합니다. ARM 프로세서 또는 다른 유형의 하드웨어를 사용 중이라면 시스템에 필요한 패키지를 확인하려면 https://github.com/ethereum/staking-deposit-cli/releases/를 먼저 확인하세요.\n\n\n\n다운로드한 파일을 해제하려면 이 명령어를 실행해야 합니다:\n\n```js\ntar -xzvf sdc.tar.gz\n```\n\n\n\n![image](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_53.png)\n\n이제 새로 추출한 디렉토리로 이동해야 합니다. 다음 명령어를 사용하여 실행하세요:\n\n```js\ncd staking_deposit-cli-fdab65d-linux-amd64\n```\n\n참고: 우리는 amd64 아키텍처를 사용하기 때문에 이것이 디렉토리 이름입니다. ARM 또는 다른 유형의 OS를 사용하는 경우 디렉토리 이름이 다를 수 있습니다. 먼저 \"ls\" 명령어를 사용하여 파일 이름을 확인하고 해당 디렉토리로 이동하십시오.\n\n\n\n이제 이 작업을 완료했으니 Holesky Launchpad로 돌아가 페이지 하단으로 이동해보세요. 거기에 이 내용을 찾을 수 있을 거에요:\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_54.png)\n\nHolesky Launchpad에서 해당 명령어를 복사하고 터미널에 붙여넣은 후 실행해보세요. 정상적으로 작동할 거에요:\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_55.png)\n\n\n\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_56.png)\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_57.png)\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_58.png)\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_59.png)\n\n\n\n\n![이미지](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_60.png)\n\n![이미지](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_61.png)\n\n이제 이 작업을 마무리했으니, 입금 데이터가 있는 디렉토리로 이동해 봅시다. 다음 명령어를 사용하세요:\n\n```js\ncd validator_keys\n```\n\n\n\n여기서는 이 디렉토리의 파일을 확인하는 명령을 사용하십시오:\n\n```js\nls\n```\n\n![이미지](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_62.png)\n\n지금 해야 할 일은 입금 데이터 파일을 Holesky Launchpad를 열어둔 주 pc로 전송하는 것입니다. 이를 복사하여 붙여넣을 수 없으며, 이 파일을 깨끗하게 전송하기 위해 특정 명령을 사용해야 합니다. 그렇지 않으면 Holesky Launchpad에 업로드할 때 실패할 것입니다.\n\n\n\n먼저 파일의 이름을 복사하세요. 파일 이름을 드래그한 후 Windows에서는 Ctrl+C를 사용하세요. Windows에서는 Ctrl+C를 누른 후에 터미널 라인이 나타납니다. 걱정마세요, 이건 정상입니다. 파일 이름을 원하는 텍스트 편집기에 붙여넣으세요.\n\n그런 다음 Windows에서 명령 프롬프트를 열어야 합니다.\n\n- Windows 키 + R을 누릅니다.\n- cmd를 입력한 후 Enter를 누르세요. 이렇게 하면 터미널이 열립니다.\n\n\n\nMACOS에서\n\n- Command+Space를 눌러주세요.\n- \"Terminal\"을 입력하면 터미널 앱이 나타날 것입니다. 그것을 엽니다.\n\n이후에 다음 단계를 따라주세요:\n\n아래 명령어를 실행해야 합니다: \n\n\n\n```js\nscp username@remote_host:~/stakingdepositcli/staking_deposit-cli-fdab65d-linux-amd64/validator_keys/deposit_data-1713341827.json C:\\Users\\PC\\Desktop\n\n\"username\"은 서버의 사용자 이름으로 변경해주세요. 저의 경우엔 \"root\"입니다.\n\"remote_host\"는 서버의 IP 주소로 대체해주세요. 예시로 0.0.0.0을 사용하겠습니다.\n\n그래서 윈도우에서 실행하는 명령어는 다음과 같을 것입니다:\nscp root@0.0.0.0:~/stakingdepositcli/staking_deposit-cli-fdab65d-linux-amd64/validator_keys/deposit_data-1713341827.json C:\\Users\\PC\\Desktop\n\n맥OS에서 실행하는 명령어는 다음과 같을 것입니다:\nscp root@0.0.0.0:~/stakingdepositcli/staking_deposit-cli-fdab65d-linux-amd64/validator_keys/deposit_data-1713341827.json ~/Desktop\n```\n\n![How to Run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_63.png)\n\n![How to Run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_64.png)\n\n여기까지 오셨으면, puffer coral cli 디렉토리에서 registration.json 파일을 다운로드해봅시다. 곧 필요해질 것이기 때문에 미리 다운로드 받아두는 것이 좋습니다. 다음 명령어를 실행하시면 됩니다:\n\n\n\n```js\nscp username@remote_host:~/puffer/coral/registration.json C:\\Users\\PC\\Desktop\n\n\"username\"을 서버의 사용자 이름으로 변경하세요. 예를 들어 제 경우에는 \"root\"입니다.\n\"remote_host\"를 서버의 IP 주소로 변경하세요. 예시로 0.0.0.0을 사용하겠습니다.\n\n윈도우에서는 다음과 같이 명령어를 입력합니다:\nscp root@0.0.0.0:~/puffer/coral/registration.json C:\\Users\\PC\\Desktop\n\n맥OS에서는 다음과 같이 입력할 수 있습니다:\nscp root@0.0.0.0:~/puffer/coral/registration.json ~/Desktop\n```\n\n이제 \"Yes\"를 쓰는 첫 번째 프롬프트를 더 이상 묻지 않습니다. 이제 서버 비밀번호를 입력하라는 메시지만 표시됩니다. 비밀번호를 입력하고 Enter 키를 누르세요. 파일이 Windows 또는 맥OS의 데스크탑으로 다운로드됩니다.\n\n이제 시스템에 입금 데이터 및 Registration .json 파일이 올바르게 저장되었습니다. 그러나 먼저 Holesky Launchpad에서 등록을 마무리해야 합니다. 지금까지 있던 페이지의 아래부분에 있는 \"Continue\"를 클릭하면 아래 페이지로 이동합니다:\n\n![How to Run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_65.png)\n\n\n\n여기서 방금 다운로드한 \"입금 데이터\" 파일을 업로드하려고 합니다. 파일을 업로드해주세요.\n\n![Deposit Data Upload](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_66.png)\n\n만약 파일이 서버에서 PC로 제대로 다운로드되었다면 확인 표시가 나타날 것입니다. \"계속\"을 클릭해주세요.\n\n![Continue After Successful Download](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_67.png)\n\n\n\n\n![How to run a Puffer Finance Testnet Node 68](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_68.png)\n\n![How to run a Puffer Finance Testnet Node 69](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_69.png)\n\n![How to run a Puffer Finance Testnet Node 70](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_70.png)\n\n![How to run a Puffer Finance Testnet Node 71](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_71.png)\n\n\n\n\n\n![image](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_72.png)\n\n![image](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_73.png)\n\n![image](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_74.png)\n\n![image](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_75.png)\n\n\n\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_76.png)\n\n우리가 이것을 한 이제, 우리는 합의 및 실행 클라이언트의 동기화를 계속할 수 있습니다. 서버로 돌아가서 다음 명령어를 사용하여 메인 디렉토리로 돌아갑시다:\n\n```js\ncd\n```\n\n# 합의 및 실행 클라이언트 실행하기\n\n\n\n이를 위해 서버에 Screen을 설치해야 합니다. Screen을 설치하면 터미널을 종료해도 클라이언트가 계속 실행될 수 있습니다. 다음 명령어를 실행하세요:\n\n```js\nsudo apt update\nsudo apt install screen\n```\n\n설치되었는지 확인하려면 이 명령어를 실행하세요:\n\n```js\nscreen --version\n```\n\n\n\n이제 우리는 우리의 합의 클라이언트를 위한 화면을 생성해야 합니다. 이를 위해 다음 명령을 사용하세요:\n\n```js\nscreen -S consensus\n```\n\n이 명령을 실행하면 다음과 같이 일반 명령 줄이 나타나는 화면이 보입니다:\n\n\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_78.png)\n\nIt may appear as if we haven't done anything, but we have. We've successfully created a session named \"consensus\" to ensure that our consensus client continues to run even after we've closed our terminal or SSH client.\n\nTo run the consensus client, simply enter the following command:\n\n\n\n```js\ncd ~/nimbus-eth2\n```\n\n해당 디렉토리 안으로 들어가시면 다음 명령어를 실행해주세요:\n\n```js\n./run-holesky-beacon-node.sh --web3-url=http://127.0.0.1:8551 --suggested-fee-recipient=WALLET --jwt-secret=/tmp/jwtsecret\n```\n\n\"WALLET\"을(를) 지정한 지갑 주소로 바꿔주세요.\n\n예시:\n제 경우에는 다음과 같을 것입니다:\n```js\n./run-holesky-beacon-node.sh --web3-url=http://127.0.0.1:8551 --suggested-fee-recipient=0xB0551d678a6746F2Cf300CF698d314EA1e74e3c7 --jwt-secret=/tmp/jwtsecret\n```\n\n![이미지](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_79.png)\n\n\n\n\n![How to Run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_80.png)\n\nFor now, we can leave this here, depending on your network, this can take from 2 to 4 hours or more.\n\n### Running the Execution Client\n\nNow, let's open a new SSH client. You can open a new window of PuTTY, a new tab on Solar Putty, or open a new terminal on MacOS. Don't worry; you can run multiple clients on the same server.\n\n\n\n위 단계를 완료하셨다면, 다음 명령어를 사용하여 \"execution\"이라는 새로운 스크린 세션을 생성해 보세요:\n\n```bash\nscreen -S execution\n```\n\n[2024-05-05-HowtorunaPufferFinanceTestnetNode_81.png](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_81.png)\n\n이 명령을 실행하면 다음과 같은 일반적인 명령줄 화면으로 이동됩니다:\n\n\n\n![Crypto Image](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_82.png)\n\nHey there! So, it might not look like much, but trust me, we just accomplished something pretty cool. We've set up a session called \"execution\" that keeps our execution client up and running even if we close our terminal or ssh client.\n\nNow, let's head over to our Nethermind directory to start our execution client by using this command:\n\n```js\ncd ~/nethermind/src/Nethermind/Nethermind.Runner\n```\n\n\n\n여기서 이 명령을 실행하십시오:\n\n```js\ndotnet run -c Release --   --config=holesky   --datadir=\"../../../../nethermind-datadir\"   --JsonRpc.Host=0.0.0.0   --JsonRpc.JwtSecretFile=/tmp/jwtsecret\n```\n\n그러면 다음과 같이 합의 클라이언트와 동기화를 시작합니다:\n\n![How to Run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_83.png)\n\n\n\n\n![How to run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_84.png)\n\n\n그래서 이제 우리가 Consensus 클라이언트 동기화하고, 실행 클라이언트를 연결했으니, 그냥 완료될 때까지 기다리면서 우리의 Puffer 대시보드로 돌아가서 등록을 완료하면 됩니다.\n\n참고: jwtsecret를 생성한 후에 시스템을 다시 부팅하면, /tmp/ \"임시\" 디렉토리에 저장되었으므로 삭제됩니다. 하지만 걱정하지 마세요. Consensus 또는 Execution 클라이언트를 실행하기 전에 과정을 반복할 수 있습니다. 아무것도 변경되지 않습니다.\n\n# Puffer 대시보드에서 등록 완료하기\n\n\n\n다시 한번 가보세요: [Puffer Finance Launchpad](https://launchpad.puffer.fi/Setup)\n\n![Step 1](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_85.png)\n\n![Step 2](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_86.png)\n\n![Step 3](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_87.png)\n\n\n\n![Image](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_88.png)\n\nIf you'd like to add the pufETH and Validator Ticket contracts to your MetaMask, here they are:\n\nHolesky pufETH Contract: 0x98408eadD0C7cC9AebbFB2AD2787c7473Db7A1fa\n\nHolesky Puffer Validator Ticket Contract: 0xA143c6bFAff0B25B485454a9a8DB94dC469F8c3b\n\n\n\n\n![Image](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_89.png)\n\n![Image](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_90.png)\n\nRemember the file called “registration.json” we downloaded earlier? This is where we need it\n\n![Image](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_91.png)\n\n\n\n\n파일을 업로드하고 파일을 확인하면, 모두 정상이면 Metamask에서 2개의 거래에 서명하고 1개의 거래를 확인하라는 메시지가 표시됩니다. 이를 수행한 후에 다음 링크로 이동하세요: [https://launchpad.puffer.fi/Dashboard](https://launchpad.puffer.fi/Dashboard)\n\n![image1](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_92.png)\n\n![image2](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_93.png)\n\n![image3](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_94.png)\n\n\n\n\n![How to Run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_95.png)\n\n이렇게 하면 콘센서스와 실행 클라이언트가 활성화 대기열(Beacon Chain)이 종료되기 전에 완전히 동기화되었는지 확인하기만 하면 됩니다.\n\n클라이언트들이 서로 및 블록체인과 동기화되었으면, 활성화 대기열이 종료될 때까지 기다리기만 하면 됩니다. 그럼 beaconcha.in 페이지가 다음과 같이 표시될 것입니다:\n\n![How to Run a Puffer Finance Testnet Node](/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_96.png)\n\n\n\n\n이제 holesky 테스트넷에서 Puffer NoOp Validator를 실행하는 전체 과정을 알았습니다. 궁금한 점이 있으시면 Puffer Finance Discord의 노드 운영자 섹션에 방문하여 질문하거나 도움을 받기 위해 티켓을 여는 것을 망설이지 마세요.\n\n이 안내서가 많은 도움이 되기를 바라며, 건배해요!\n\nSteven Bravo\n\nTwitter: [https://twitter.com/stevenbravo_](https://twitter.com/stevenbravo_)\n\n\n\nPuffer Finance Discord: [https://discord.gg/pufferfi](https://discord.gg/pufferfi)","ogImage":{"url":"/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_0.png"},"coverImage":"/assets/img/2024-05-05-HowtorunaPufferFinanceTestnetNode_0.png","tag":["Tech"],"readingTime":31},{"title":"초기 이더리움 계약을 탐험하는 고고학 여행","description":"","date":"2024-05-05 17:02","slug":"2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts","content":"\n\n![An Archeological Trip Across Early Ethereum Contracts](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_0.png)\n\n# 고대의 재미\n\n인류 역사상 가장 이른 계약들은 수천 년 전 고대 메소포타미아에 있을지도 모릅니다. 아래는 익숙한 개념을 담고 있는 부동산 거래의 한 예시입니다:\n\nSini-Ishtar, Ilu-eribu의 아들, 그리고 형제인 Apil-Ili는 Sini-Ishtar의 집 옆에 위치한 Minani의 집 옆에 위치한 집과 함께 구축된 땅의 1/3을 구입했습니다. 그리고 Sini-Ishtar의 집 옆에 위치한 경작지의 1/3을 구입했습니다. 그러한 지역은 Sini-Ishtar의 집에 면한 거리에 있습니다. Migrat-Sin의 아들 Minani의 재산인 Minani로부터 구입했습니다. 그들은 합의된 가격으로 4.5 은로 지불했습니다. Minani의 집에 대한 추가적인 청구는 결코 없을 것입니다.\n\n\n\n이러한 문서의 흥미로운 특징 중 하나는 평범한 것들을 되짚어주는 것입니다. 고대 이집트 기록들은 해독을 위한 큰 노력 끝에 가독성이 있게 되었는데, 이들은 독특하고 매혹적인 문화를 표현하지만 친숙한 형식으로 이루어져 있습니다: 계약서, 교육, 시, 개인 편지, 낙서 등이 그 예입니다.\n\n![이미지](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_1.png)\n\n현대 블록체인 시스템과 비교해보는 것은 흥미로운 점입니다. 분산 시스템의 코드는 미래에도 오랫동안 남아 있을 수 있으며, 그것은 원장에 남긴 문구처럼 우리의 인간적 성향을 비춥니다.\n\n하지만 블록체인은 아직 20년도 안 되었습니다. 그럼에도 많은 블록체인 애호가들은 몇 년 전의 코드 샘플을 해독하고 조사함으로써 고대를 연상하는 \"흥미\"를 느낍니다. 이더리움에서는 지금 \"역사적 NFT\" 커뮤니티가 형성되어 이전 프로젝트를 면밀히 조사하며, 그것을 활성화하고 감상하며 투기하기 위해 노력합니다.\n\n\n\n# 검증된 계약\n\n작은 이야기를 살펴보는 한 가지 방법은 Etherscan의 초기 검증된 계약을 탐색하는 것입니다. 계약을 검증하면 사전 컴파일된 코드를 읽을 수 있습니다. 검증된 계약의 역사를 추적하면 새로운 미디엄이 사람들의 경험에 대한 익숙한 개념을 빠르게 표현하는 것을 보여줍니다. 이는 아마도 숨메르인과 이집트인들이 늘 고민했을, 인사와 메시지부터 부동산 시스템, 운명의 게임까지의 개념을 포함합니다.\n\n하지만 새로운 미디엄은 새로운 메시지가 될 수 있습니다. 창의성은 독특한 문화에 대한 새로운 기회를 제공합니다. 블록체인에서 이 독특한 문화는 공개적 계산 시스템에서만 가능한 조합 가능한 기능을 구축하는 계약이 특징일 수 있습니다.\n\n여기 이를 설명하는 초기 계약 배포들의 연속입니다.\n\n\n\n## 2015년 8월 7일: \"안녕 이더리움!\"\n\nEtherscan에서 확인된 가장 초기의 계약은 지갑 0x3d076에 의해 배포되었습니다. 이 간단한 계약은 \"Hello Ethereum!\"을 출력하는 go()라는 읽기 함수를 생성합니다.\n\n![이미지](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_2.png)\n\n우연히도, 이 지갑 0x3d076은 초기 이더리움 기여자인 \"Linagee\"로 알려져 있으며, 이제는 인간이 읽을 수 있는 문자열에 대한 조회 테이블을 구현하는 글로벌 레지스트리 계약으로 유명합니다. 이제 널리 사용되는 이더리움 네임 서비스와 마찬가지로, \"takenstheorem\"과 같은 훨씬 간단한 영숫자 시퀀스를 등록하고 사용할 수 있습니다. 이 계약은 이 문자열을 기억하기 어려운 주소를 가리킬 수 있습니다. 역사적인 NFT 애호가들은 최근 이전 계약 주변에 래퍼 함수를 구현했으며 레지스트리는 이제 OpenSea에서 널리 거래되고 있습니다. (이 글로벌 레지스트리 계약은 초기 이더리움 코드베이스의 일부로서 원래 Gavin Wood에 의해 작성되었을 수도 있음에 유의하십시오.)\n\n\n\n## 2015년 8월 7일: Terra Nullius\n\n![이미지](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_3.png)\n\nReddit에서 \"테라 누리우스\"는 사용자들에게 이더리움 역사에서 자신의 자리를 요구할 수 있는 기회로 소개되었습니다. 이 계약은 거래를 통해 체인상에 메시지를 \"요구\"할 수 있도록 허용합니다. 이러한 메시지들은 양도할 수 없기 때문에 요구자에게 \"영혼에 묶인 토큰\"과 같은 모습을 갖고 있습니다.\n\n![이미지](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_4.png)\n\n\n\n안녕하세요! 암호화폐 전문가 여러분. 지난 우리는 Linagee님께서 Terra Nullius에 작은 메시지를 남기셨습니다. NFT 커뮤니티에서는 2021년 9월에 Terra Nullius의 V2 버전을 만들었는데, 이 비교적 역사적이지 않은 재배치가 OpenSea에서 600 이상의 ETH 거래량을 기록했습니다.\n\n![이미지 설명](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_5.png)\n\n##2015년 8월 7일: 도박, 폰지 및 더 많은 것들\n\n초기 확인된 계약들은 도박, 폰지, 그리고 관련 프로젝트로 가득 차 있습니다. \"MySchema\"라는 계약은 이와 같은 종류의 최초의 확인된 계약일 수 있습니다. 1이더 폰지 계획을 시행하는데, Reddit에서 2016년에 논의된 것입니다.\n\n\n\nProvably fair, uncensorable, and permanent. The first financial contracts of their kind. Quite an achievement…for a Ponzi scheme. And they are still out there accumulating and distributing…\n\nInterestingly, this old contract now holds over 9 ETH. This early engagement surely indicative of ETH at $3.\n\nThere are tons of these: SimpleLotto, LittleCactus, Goodfellas, ZeroPonzi, The10ETHPyramid, NoFeePonzi, CrazyEarning. It marks the association our industry has with speculation and financial play that is both tempting and unfortunate (games of fortune are likely older than recorded history).\n\n[An Archeological Trip Across Early Ethereum Contracts](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_6.png)\n\n\n\n## 2015년 10월 6일: 공공재!\n\n지갑 0xd3cda는 \"DateTime\"이라는 계약을 생성했으며 유용한 타임스탬프 기능을 구현했습니다. 계약은 유닉스 타임스탬프(이 글을 쓰는 시간의 타임스탬프인 1669601568)를 인간이 읽을 수 있는 날짜로 변환하는 데 도움이 됩니다. 또한 읽기 쉬운 날짜에서 타임스탬프를 생성할 수도 있습니다. 이 계약을 생성하기 위해 배포자는 0.03 ETH의 가스를 소비했는데, 이는 배포 당시에 약 0.02 미국 달러와 같았습니다.\n\n![AnArcheologicalTripAcrossEarlyEthereumContracts_7.png](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_7.png)\n\n## 2015년 10월 9일: \"Grove\"\n\n\n\nGrove by Piper Merriam was a project that provided openly stored and easily accessible organized data, making it a public good. While it was an interesting data experiment back in the days when gas prices were equivalent to $1 per ether, the project did not gain widespread adoption.\n\n![AnArcheologicalTripAcrossEarlyEthereumContracts_8](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_8.png)\n\n## October 19, 2015: A Virtual World\n\n![AnArcheologicalTripAcrossEarlyEthereumContracts_9](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_9.png)\n\n\n\n그 당시 복잡성의 이러한 벡터의 정점은 이더리아였습니다. 이더리아는 아마도 이더리움에서 최초의 진정한 NFT였으며, 높이 존중받는 ERC-721 표준 이전인 2015년 10월에 배포되었습니다. 래퍼(contract) 컨트랙트를 통해 이더리아는 OpenSea에서 거래될 수 있습니다. 이더리아의 원래 비전은 \"플레이어가 타일을 소유하고 블록을 작물로 키우며 무언가를 짓는 가상 세계입니다. 전 세계의 상태는 유지되며 모든 플레이어 조작이 탈중앙화되고 신뢰할 수 있는 이더리움 블록체인을 통해 이루어집니다.\"\n\n![이미지 10](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_10.png)\n\n![이미지 11](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_11.png)\n\n# 결론\n\n\n\n작은 포스트를 시작하며 계약 역사가 일반적인 인간 경험을 반영하며 우리를 \"고대인\"에 연결한다고 설명했습니다. 이러한 사례는 이더리움 초기에 확인된 계약에서 많이 나타납니다. 예를 들어, 한 커플은 자녀의 이름을 선택하기 위해 온체인 투표 계약을 사용하기로 결정했습니다. 소프트웨어 개발자는 체인 상에 혼인 전 계약을 표현하기 위한 코드베이스를 작성했습니다. 심지어 유명한 DAO의 제안에도 인간의 호기심의 메아리가, 기본적인 지배 결정부터 체인상 장난스럽게 보이는 그래피티까지 있습니다.\n\n![An Archeological Trip Across Early Ethereum Contracts](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_12.png)\n\n이러한 관행은 때로는 농담의 대상이 되기도 합니다. \"블록체인에 올려놓아\"는 새로운 열성가들과 오리지널 그룹의 비판적인 한숨이기도 합니다. 그러나 이는 전혀 놀라운 것이 아닙니다. 우리는 이러한 것들을 인코딩하고 싶어합니다. 상형문자는 다양한 인간 메시지를 인코딩하는 데 상당한 시간과 노력을 투자하는 인간의 의지적인 예입니다. \n\n이더리움에서는 시간이 흐르면서 복합성 관행이 엄청난 복잡한 금융 시스템을 내놨습니다. 이는 DeFi 및 NFT에서도 마찬가지입니다. 예를 들어, 한 번 Avastars NFT가 그 시대를 대변할 수 있는지를 관찰한 적이 있었습니다:\n\n\n\nAvastars are fascinating NFTs with intricate artwork, created on a blockchain network that used to have lower fees and Ethereum prices. They carry a sense of historical weight, like relics from the past, destined to impress anyone who delves into the contract's specifics.\n\nIt's a playful and somewhat nostalgic notion, appealing to our human curiosity.\n\n![An Archeological Trip Across Early Ethereum Contracts](/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_13.png)\n\n## Notes\n\n\n\n- 약 30년 전 닉 살보(Nick Szabo)가 \"스마트 계약\"이라는 아이디어를 처음 제안했고, 비트코인 자체가 이제 여러 종류의 스마트 계약을 구현할 수 있습니다. 비트코인은 Script라는 제한된 스마트 계약 언어를 가지고 있습니다. 아마도 가장 유명한 비트코인 계약은 라이트닝 네트워크를 지원하는 것들입니다. 비트코인은 분명히 자체적인 흥미로운 역사를 제공합니다.\n- \"첫 번째 NFT\"가 무엇인지에 대한 질문은 분명히 논란이 많은 가치 있는 질문입니다. 하지만 강요받는다면, 에테리아(Etheria)를 선택할 수 있을 것 같습니다. 왜냐하면 에테리아의 계약이 정말로 상당히 정교하며, NFT와 NFT 거래 도구로 생각하는 요소들을 많이 구현하고 있기 때문입니다.","ogImage":{"url":"/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_0.png"},"coverImage":"/assets/img/2024-05-05-AnArcheologicalTripAcrossEarlyEthereumContracts_0.png","tag":["Tech"],"readingTime":7},{"title":"맨타 네트워크 에어드랍 안내 맨타 토큰의 여정을 한 단계씩 따라가는 완벽한 튜토리얼","description":"","date":"2024-05-05 17:01","slug":"2024-05-05-MantaNetworkAirdropGuideNavigatetheMANTATokensJourneyStep-by-StepCompleteTutorial","content":"\n\n![2024-05-05-MantaNetworkAirdropGuideNavigatetheMANTATokensJourneyStep-by-StepCompleteTutorial_0.png](/assets/img/2024-05-05-MantaNetworkAirdropGuideNavigatetheMANTATokensJourneyStep-by-StepCompleteTutorial_0.png)\n\n암호화폐 생태계에서 흥미진진한 신선한 바람, Manta 에어드랍은 자격을 갖춘 회원들 사이에 MANTA 토큰을 배포하는 것을 목표로 하고 있습니다. 이 블로그 섹션에서는 회원가입 기간, 수령 과정 및 자격 기준을 포함한 이 이벤트의 주요 세부 정보를 설명할 것입니다. 이 독특한 혜택은 지지자들이 쉬운 작업을 수행하여 무료 암호화폐 자산을 받을 수 있도록 합니다. 지금 바로 참여하여 당신의 MANTA 지분을 청구하세요!\n\nMANTA 토큰을 청구하는 것은 간단한 과정입니다. 참가자들은 공식 안내 지침에 명시된 과정을 따라야 합니다. 단계별 안내서가 각 과정을 따라가도록 안내하여 스무스한 청구 과정을 보장합니다.\n\n# MANTA 에어드랍에 대해\n\n\n\n참가 조건은 Manta 에어드롭에 참여하기 위해 중요합니다. 모든 사용자는 에어드롭 자격을 얻기 위해 이러한 기준을 충족해야 합니다. 보통 세부 내용은 특정 토큰을 소유하고 Manta Network에 계속 참여하는 것을 포함합니다. 사용자가 무료 토큰의 일부를 받을 수 있는지 확인하는 데는 전제 조건을 완전히 이해하는 것이 중요합니다.\n\n# MANTA 에어드랍 단계별 튜토리얼\n\n당신의 암호화폐 에어드롭을 청구하는 것은 바다에서 보물을 발견하는 것과 같습니다. 지침을 따라주세요:\n\n![에어드롭 튜토리얼](/assets/img/2024-05-05-MantaNetworkAirdropGuideNavigatetheMANTATokensJourneyStep-by-StepCompleteTutorial_1.png)\n\n\n\n\"Manta 에어드랍 포털에 방문해 주세요.\n\n당신의 지갑을 에어드랍 포털에 연결해 주세요.\n\n‘자격 확인’ 버튼을 누르고 확인을 기다려 주세요.\n\n자격이 충분하다면, ‘받기|수령하기|수집하기’ 버튼이 활성화됩니다.\"\n\n\n\n\"\\\"지금 'Get|Receive|Collect'를 클릭하고 요청된 검증을 완료하세요.\n\n지갑에서 이체를 확인하여 토큰을 받으세요.\n\n인내심이 필요합니다; 토큰 배포에는 시간이 걸릴 수 있습니다.\n\n- $MANTA를 청구하세요\\\"\"\n\n\n\n좋은 일했어요! 이걸로 쉬운 100–500$가 들어올 거예요! 저를 지원해 주시고 박수를 보내고 팔로우해 주세요, 감사합니다!\n\n# MANTA 토큰 스테이킹\n\nMANTA 토큰 스테이킹은 암호 환전을 최적화하는 핵심 전략을 이룹니다. MANTA의 생태계에서 스테이커들은 토큰을 스테이킹하여 인센티브를 얻습니다. 이러한 인센티브는 추가로 제공되는 MANTA 토큰으로 암호 자산을 크게 키울 수 있도록 이끕니다.\n\n# 에어드랍 후 트레이딩 전략\n\n\n\n에어드랍 후 거래 전략을 활용하면 암호화폐 수익을 더욱 최적화할 수 있어요. 시장 변동성을 고려한 구매 및 판매 주문의 정확한 타이밍은 수익을 극대화할 수 있습니다. 시장 동향을 추적하고 기술적 분석을 활용하며 균형 잡힌 투자 포트폴리오를 유지하는 것이 중요합니다.\n\n# 대안 투자 기회\n\nMANTA 스테이킹 및 거래를 넘어, Manta 생태계 내에서는 다양한 투자 기회를 찾을 수 있습니다. 이는 자산 풀에 참여하거나 제휴 플랫폼의 제품을 조사하는 것을 포함합니다. 이러한 대안들은 수익 창출을 위한 가능한 경로를 제공하며 포트폴리오를 확장하고 리스크를 줄이는 데 도움이 됩니다.","ogImage":{"url":"/assets/img/2024-05-05-MantaNetworkAirdropGuideNavigatetheMANTATokensJourneyStep-by-StepCompleteTutorial_0.png"},"coverImage":"/assets/img/2024-05-05-MantaNetworkAirdropGuideNavigatetheMANTATokensJourneyStep-by-StepCompleteTutorial_0.png","tag":["Tech"],"readingTime":2},{"title":"지금 진행 중인 2024 모디 브레인루프헤드 NFT 챌린지입니다","description":"","date":"2024-05-05 17:00","slug":"2024-05-05-NowLiveThe2024MoodyBrainLoopheadNFTChallenges","content":"\n\n2024 무디 브레인 (루프헤드) NFT 챌린지가 공식적으로 시작되었습니다! 활성화된 루프링 L2 주소를 보유한 모두가 참여하고 NFT 상을 획득할 수 있는 기회가 생겼습니다.\n\n✅ 과제 완료로 자격 얻기\n✅ 새로운 무디 브레인 (루프헤드) NFT 또는 다른 상품 받기\n\n2024년이 시작되었고, 이제 우리의 일년간의 챌린지 이벤트도 시작되었습니다. 올 해를 통해 새로운 제품 런칭에 관련된 새로운 과제 챌린지를 진행할 예정이며, 루프링 생태계에서 활발하게 활동하고 새 제품을 시도해본 사용자들에게 남아있는 무디 브레인 (루프헤드) NFT 중 일부를 보상으로 제공할 것입니다.\n\n우리는 또한 행운의 참가자들에게 올 해 동안 상품화된 새로운 루프헤드 웨어러블 제품도 제공할 예정입니다.\n\n\n\nUpon completion of all the task challenges, we will also hold exciting grand finale giveaways on various social media platforms (stay tuned for details).\n\n# The Prize Pool 🏆\n\n## Win up to 100 Moody Brain (Loophead) NFTs:\n\n![Moody Brain NFTs](/assets/img/2024-05-05-NowLiveThe2024MoodyBrainLoopheadNFTChallenges_0.png)\n\n\n\n커뮤니티의 인기 있는 Moody Brain Loopheads가 돌아왔습니다. 올해 내내 최고 상으로 최대 100개 이상의 이 한정판 NFT가 제공될 예정입니다.\n\n[전체 컬렉션을 여기서 확인하세요.](링크)\n\n## 최대 2,000개의 KIX 웨어러블 아이템:\n\n![이미지](/assets/img/2024-05-05-NowLiveThe2024MoodyBrainLoopheadNFTChallenges_1.png)\n\n\n\n이번에는 KIX Wearables(총 공급량 2천 개) 중 처음으로 커뮤니티에 배포됩니다. Loopring과 협력한 Thed Holes의 디자인으로, Loopring 지지자들 중 일부에게 이 제품들을 전달하는 것에 흥분합니다.\n\n전체 컬렉션은 여기에서 확인할 수 있습니다.\n\n# 'Moody Brain (Loophead)' + Wearable NFTs를 얻는 방법\n\n✅ 작업 완료\n✅ 지갑 연결(작업에 따라 필요한 경우)\n✅ Loopring L2에서 레드 패킷 엔트리 받기\n\n\n\nLoopring 스마트 월렛 내에서 새로운 제품을 시도하거나 Loopring 웹 DApp에서 수행하여 간단히 작업을 완료하세요. 규칙과 지침을 따르면 계속해서 진행 중인 Red Packet 추첨 대상이 됩니다.\n\n일부 작업은 Loopring L2 이외의 네트워크를 사용하는 경우 Activity 인터페이스를 통해 지갑을 연동해야 할 수도 있습니다.\n\n각 NFT에 대한 Red Packet 추첨은 매주 2회 정도 (작업 규칙에 따라 더 자세한 내용이 있습니다) Loopring L2 주소로 보내집니다. 올해 동안 약 100개의 Moody Brain (Loophead) NFT와 2,000개의 Wearable NFT가 증정될 예정입니다.\n\n이제 작업들로 이동해봅시다👇\n\n\n\n# ✔️ 작업 #1: 타이코 월렛 배포하기\n\n레드 패킷 추첨: 매주 두 번, 2개의  무디 브레인 (루프헤드) NFT 및 20개의 의류 NFT가 나눠지게 됩니다.\n\n현재 진행 중인 레드 패킷 추첨에 참여하려면 Loopring Wallet 앱을 사용하여 타이코 월렛을 배포하세요.\n\n![이미지 링크](/assets/img/2024-05-05-NowLiveThe2024MoodyBrainLoopheadNFTChallenges_2.png)\n\n\n\n이 작업을 수행하려면 새로운 Taiko 지갑을 활성화된 Loopring L2 지갑에 연결하여 루프링 L2 네트워크에서 발생하는 레드 패킷 추첨을 받아야 합니다.\n\n![이미지](/assets/img/2024-05-05-NowLiveThe2024MoodyBrainLoopheadNFTChallenges_3.png)\n\n## 언제:\n\n이 라운드는 이미 Taiko Hekla 테스트넷에서 활성화되었습니다. 오늘 Taiko 지갑을 배포하고 자격을 얻을 수 있으며, Taiko가 메인넷으로 전환될 때까지 연중 계속될 예정입니다.\n\n\n\n## 규칙:\n\n- Taiko A6 또는 A7(Hekla) 테스트넷 중 하나에서 새로운 월렛을 활성화한 모든 월렛은 계속해서 Red Packets를 받을 자격이 있습니다.\n- 이는 아마도 Taiko 메인넷으로 확장될 것으로 예상되지만, 이에 대한 공식 업데이트를 기다려주세요.\n- 연결된 각 월렛은 최대 한 개의 자격 항목을 받을 수 있습니다.\n- 매 2주마다 두 (2) 개의 Moody Brain (Loophead) NFT와 스냅백 NFT 스냅백 20개가 추첨 대상이 됩니다.\n- 추첨 대상이 된 각 NFT는 Loopring L2에서 Red Packet으로 보내지며, 각 주소는 열 때마다 NFT를 얻을 수 있는 기회가 생깁니다.\n- Taiko 월렛을 배포한 사용자는 해당 주소를 Loopring L2 주소에 연결해야 Red Packets를 수령할 수 있습니다(웹 랜딩 페이지 또는 모바일 지갑 앱의 활동 탭 내에서).\n- 매 2주마다 최대 두 (2) 개의 Moody Brain (Loophead) NFT와 스냅백 NFT 20개가 각각 획득될 수 있습니다. 정확한 수량은 해당 기간 동안 활동이 얼마나 있었는지에 따라 팀이 결정됩니다.\n\n# ✔️ 예정된 작업\n\n또 다른 Moody Brain (Loophead) NFT와 Wearable NFT를 획득할 예정입니다.\n\n\n\n올해 동안 신제품 출시에 맞춰 새로운 과제들을 조금씩 선보일 예정이에요. 일부는 겹칠 수도 있어요. 그렇다면 각 2주 주기마다 여러 찬스가 주어져서 여러 번의 당첨 기회를 얻을 수도 있을 거예요.\n\n곧 시작될 다음 과제는 새로운 Loopring Portal에서의 활동을 포함할 것이니까, 공식 업데이트를 기대해 주세요. \n\n일반적으로 분기별로 최소 1번의 새로운 과제에 참여하게 될 거에요.\n\n모든 과제 도전이 끝나면, 우리는 소셜 미디어 전반에 걸쳐 대규모의 기념 증정 행사를 개최할 거에요. 그동안 참여한 사용자들은 대상이 되어 보상을 받을 기회가 주어질 거에요. 이는 LRC 보상부터 새롭게 디자인된 Moody Brain (Loophead) NFT, 그리고 Loopring 웨어러블 NFT, 또 다른 상금들까지 다양할 수 있어요.\n\n\n\n이번 행사는 즐거운 클라이막스가 될 것이니 올 해를 통틀어 참여하고 이 상품들을 손에 넣고 싶을 겁니다. 참여하려면 Smart Wallet을 다운로드하고 Discord에 참여하거나 Twitter를 열어 매 작업의 시작을 안내하는 최신 소식을 받아야 합니다.\n\n# Loopring 경험을 사랑하시나요?\n\n우리를 선호하는 앱 스토어에서 평가해 주시면 감사하겠습니다. 다른 잠재적 사용자들에 의해 Loopring이 더 쉽게 발견될 수 있습니다!\n\n![NowLiveThe2024MoodyBrainLoopheadNFTChallenges_4.png](/assets/img/2024-05-05-NowLiveThe2024MoodyBrainLoopheadNFTChallenges_4.png)\n\n\n\n# Loopring 에 관하여\n\nLoopring은 확장 가능하고 안전한 DeFi 및 NFT 애플리케이션을 위한 이더리움 레이어 2 zkRollup 프로토콜입니다. Loopring은 L2 상에서 비보관 방식의 고성능 제품인 Loopring Wallet(이더리움 스마트 지갑) 및 Loopring L2 웹 앱(주문서 및 AMM DEX)을 구축했습니다. 더 알아보려면 Medium을 팔로우하거나 Loopring.org를 방문해주세요.\n\n트위터 ⭑ 디스코드 ⭑ 레딧 ⭑ GitHub ⭑ 문서 ⭑ 유튜브 ⭑ 인스타그램","ogImage":{"url":"/assets/img/2024-05-05-NowLiveThe2024MoodyBrainLoopheadNFTChallenges_0.png"},"coverImage":"/assets/img/2024-05-05-NowLiveThe2024MoodyBrainLoopheadNFTChallenges_0.png","tag":["Tech"],"readingTime":4},{"title":"크러스트 위의 먼지","description":"","date":"2024-05-05 16:55","slug":"2024-05-05-DustonCrust","content":"\n\n(아래 내용에서 표시된 의견은 저자의 개인적인 의견이며 투자 결정의 근거로 사용되어서는 안 되며 투자 거래에 참여할 것을 권장하거나 조언으로 해석되어서는 안 됩니다.)\n\n[2024-05-05-DustonCrust_0.png](/assets/img/2024-05-05-DustonCrust_0.png)\n\n북반구의 겨울이 끝나가는 시점에서 나는 깊고 부드러운 파우더로 가득한 겨울의 나라를 떠나 뜨거운 열대 우림으로 돌아가야 합니다. 봄으로의 전환이 시작되면서 한때 확실한 스노우보드 체험이 급속하게 어려워지기 시작했습니다. 우리는 스키 시즌에서 \"먼지 위의 얼음\"이라고 불리는 시기에 접어들고 있습니다.\n\n이 전환기에는 하루 중 온도 변화가 증가하며, 특히 햇빛이 강하게 비치는 날에는 어쩔 수 없이 어는 지점을 넘을 정도로 이르기도 합니다. 이로 인해 눈은 낮에 녹고, 밤에 다시 얼게 됩니다. 이 얼어붙은 층 위에 새로운 먼지 채워가 오른 밤이면, 아침에 아름다운 눈 덮인 지형을 볼 수 있지만, 그곳으로 나가 스키를 타려고 하면 철저히 그 밑에 있는 거친 층을 통과하려면 첫 번째로 그것에 완전히 강하게 발을 디디고 가야하는데 철저히 숨이 막힐 정도로 다리가 아프게 됩니다.\n\n\n\n암호화폐 시장은 유사한 생애 주기를 가지고 있습니다. 그들의 숭고한 시작부터 레드 사토시가 세상에 가르침을 주신 때부터, 그의 신봉자들은 의심스럽고 부서지기 쉬운 터 위에 많은 성을 쌓아왔습니다. 현재 그 중 특히 안정화폐라고 하는 터가, 암호화와 화폐 금융 시장 사이의 연결 조직으로써 많은 관심과 고민의 대상이 되고 있습니다. 우려가 증가함에 따라 우리는 안정화폐가 존재해야 하는 이유를 재방문하고 상기하는 것이 중요합니다. 그렇게 함으로써 안정화폐가 계속해서 존재해야 하는 중요성을 이해하고, 그들이 취해야 할 가장 적절한 형태를 결정하고, 현재 상황을 어떻게 가장 적절히 개선할 수 있는 방법을 식별할 수 있습니다.\n\n## 그 이유는?\n\n비트코인은 채굴 과정을 통해 생성됩니다. 비트코인 채굴자들은 에너지를 소비하고 복잡한 수학 퍼즐을 빠르게 해결하기 위해 서로 경쟁합니다. 이 경쟁에서 우승한 사람은 새로 생성된 비트코인을 보상 받게 됩니다. 이는 비트코인을 확보하는 손님 중 하나에 불과합니다.\n\n가장 흔한 비트코인 확보 방법은 누군가로부터 그것을 구매하는 것입니다. 초창기 비트코인 채굴자들이 기본적으로 그것을 판매할 수 있었던 사람들이 거의 유일했습니다(유통량이 매우 낮았기 때문에 사실상 이들이 생산하는 사람들이었습니다). 비트코인을 구입 중이라면 (그리고 아직도 그렇습니다) 그대부분은 세계 예비 화폐인 미국 달러를 사용할 가능성이 높았습니다. 따라서 가장 널리 인용되는 비트코인 환율은 (그리고 여전히 그렇습니다) BTC/USD였습니다.\n\n\n\nFiat 화폐인 USD는 서양의 fiat 금융 시스템 내에 보관되어야 합니다. 물론 현금을 사용할 수는 있지만, 세계 경제가 트리얼 단위의 USD로 측정되는 글로벌 경제에서는 현금이 실용적인 교환 수단이 아닙니다. 이 현실은 비트코인을 구매하려는 사람들이 서양 은행 시스템을 이용해야 한다는 것을 대부분 필수적으로 만듭니다. 은행은 구매자로부터 비트코인 판매자에게 USD를 이체하기 위하여 사용되어야 합니다.\n\n궁극적인 질문은, 어떻게 하면 비트코인을 구매하기 위해 USD나 다른 어떤 fiat도 사용할 필요가 없게 할 수 있을까요? 이 수수께끼를 해결하기 위해서는 전세계의 주요 경제 시스템이 상품을 구매하고 비트코인으로 임금을 받아야 합니다. 이것이 진정한 비트코인 지지자의 꿈이며 - 만약 성공한다면, 많은 사람들은 일하면서 비트코인을 벌어들이게 되어서 은행 서비스를 사용할 필요가 없어질 것입니다. 그러나 우리의 모든 노력에도 불구하고, 우리가 이 궁극적인 상태에 이르지 못할 가능성이 여전히 있습니다.\n\n지금 우리는 어떤 의미로도 고립된 상태에 있습니다. 우리는 2009년 이전의 순수한 fiat 금융 세계로부터 벗어났지만, 아직 우리 주인 사토시와 함께 하늘로 올라갈 수 없는 지옥에 갇힌 상태입니다. 거기서 우리는 높은 곳에서 주옥 같은 fiat 악마들을 내려다 보며 앉아있을 것입니다.\n\n# 무엇\n\n\n\n## 암호화폐 자본 시장에서 법정 통화를 사용해야 하는 이유\n\n### 자금 이동\n\n만약 비트코인을 금융 자산으로 사용하고 이를 미국 달러와 쉽게 교환하고 싶다면, 대부분의 경우 미국 달러와 BTC 모두를 관리할 수 있는 거래소를 사용할 것입니다.\n\n거래의 미국 달러 부분에서는 거래소가 은행 계좌를 필요로 합니다. 거래소가 은행 계좌를 얻는 것은 쉽지 않습니다. 기본적으로, 주야장천의 찬사를 받는 사토시의 신도들의 궁극적 목표는 은행 서비스가 필요 없는 대체 금융 시스템을 만드는 것입니다. 은행이 암호화폐 기업에 서비스하는 것을 거부하는 이유를 이해할 수 있습니다. 이 기업들의 궁극적인 목적이 은행들의 사업에서 상당 부분을 빼앗아가는 것이기 때문입니다. 일부 은행이 암호화폐 기업에 서비스하는 유일한 이유는 결국 은행이 단기 이윤을 극대화하고자 한다는 점입니다. 암호화폐 기업은 은행 예금에 이자를 받지 않으면서도 높은 수수료를 지불하기 때문에 수수료를 지불할 의향이 있는 것입니다. 기본적으로, 일부 은행 관리자들은 은행 시스템의 장기 이익을 희생시키고 나서 몇 년 동안의 보너스를 받기 위해 노력하고 있는 것입니다.\n\n\n\nBTC 거래에 대한 가장 큰 어려움은 없습니다. BitcoinCore를 다운로드하고 몇 시간 후에 완전히 작동하는 금융 시스템을 구축할 수 있습니다. 비트코인을 수락하고 허가 없이 전송할 수 있습니다.\n\n## 거래\n\n진정한 트레이더와 시장 제작자들은 비트코인(그리고 암호화폐 전반)의 성공이나 실패와 무관합니다. 그들은 중장기적인 관점을 취하기 위해 일하지 않으므로 그렇게 되어야 합니다. 그들의 핵심 목표는 24시간 365일 유동성을 제공하여 수익을 창출하는 것입니다.\n\n그들이 이 역할을 효과적으로 수행하기 위한 전제 조건 중 하나는 빠르고 저렴하게 달러와 암호화폐 간을 이동할 수 있는 능력입니다. 그러나 서방 은행 시스템은 그들에게 용이하지 않습니다. 자금을 내부적으로 예금자들 간에 이동하거나 은행들 간에 외부로 송금하려 하든, 돈을 빠르고 저렴하게 이동할 수 있는 구조가 갖춰져 있지 않습니다. 은행 시스템은 정부 허가를 받아 보호받는 과잉 경제체제이며, 더 빨리하거나 더 저렴해지려는 노력을 하는 것에 대한 어떠한 인센티브도 존재하지 않습니다.\n\n\n\n그래서 암호화폐 트레이더들 사이에서 USD와 암호화폐 간에 빠르게 자금을 오갈 필요가 생겼습니다. 이 문제를 해결하기 위해 트레이더들은 비트코인처럼 쉽게 이동할 수 있는 퍼블릭 블록체인 상의 토큰을 만들어야 한다는 것을 깨달았습니다. 이 토큰은 미국 달러와 정확히 같은 가치를 갖고, 그 밖에 효과적으로 USD로 이동하듯 움직일 수 있어야 했습니다. 이렇게 하면 트레이더들은 자금을 손쉽게 그대로 움직이게 할 수 있었고, 느린 서술 은행 시스템을 기다릴 필요도 없었습니다. 누군가 이러한 제품을 만들면, 트레이더들은 거래소로 디지털 달러와 같은 자산을 거의 즉시 이체하고 계좌 내외에서 수수료로 몇 센트만 지불하며 24시간 내내 거래할 수 있었습니다.\n\n**어떻게 하면?**\n\n이것이 안정화 코인(stablecoin)의 탄생으로 이어졌습니다. 안정화 코인은 비트코인이나 이더리움과 같은 퍼블릭 블록체인 상에 존재하지만, USD(또는 다른 파이트화폐의 명목)와 정확히 같은 가치를 유지하는 토큰입니다(전세계적으로 가장 큰 안정화 코인들은 USD로 표시됩니다). 테더(Tether)는 최초의 미국 달러 안정화 코인이었으며, 2014년 Omni 네트 워크에서(비트코인 상에 호스팅되었습니다) 발행되었습니다. 오늘날 USDT는 이더리움, 트론, 바이낸스 스마트체인 등 다양한 블록체인에서 사용되며 거래될 수 있습니다.\n\n거래소와 트레이더들은 USDT(그리고 일반적으로 안정화 코인)을 채택하게 되었는데, 이는 각 참여자가 자신의 은행 계좌를 보유해야 하는 필요성을 없애 주었습니다. 이를 통해 그들은 암호화폐에서 할 일에 집중할 수 있었고, 새로운 금융 시스템을 만드는 데 도움을 줄 수 있었으며, 월요일부터 금요일까지 9시부터 5시까지 일하는 은행 직원과 논강하는 대신에. 테더 조직이 자체 은행 파트너를 만족시킬 수 있고, 테더가 발행하는 각 USDT에 대해 1달러 또는 USD 현금 등가물(예: 단기 미국 국채 부채)를 보유하고 있다는 것을 입증할 수 있다면, USDT는 암호화 자본 시장에서 USD처럼 거래될 수 있습니다. USDT가 테더에 전환되어 재교환될 때, 테더는 해당 은행에 본사 계정에 보유하고 있는 동일한 미국 달러를 송금할 곳을 알려줍니다.\n\n\n\n비즈니스 전체가 갑자기 은행 계좌를 개설하고 유지하는 걱정을 하지 않아도 되어 엄청난 혜택을 누릴 수 있게 되었습니다. 예를 들어, Binance는 국제적으로 가장 큰 스팟 거래소로 성장하더라도 여러 해 동안 피아트 은행 계좌를 보유하지 않았습니다. 오늘날에도 Binance가 이제 전통 은행을 통해 미국 달러를 입금할 수 있게 되었지만, 거래소의 가장 유동성이 높은 거래 페어는 여전히 미국 달러 대신 USDT, BUSD 또는 USDC와의 페어입니다.\n\n스테이블코인을 사용하는 거래 회사들도 이점을 가졌습니다. 그들은 기업 계좌로부터 대규모의 달러 입출금을 기다릴 필요가 없었습니다. 최초의 피아트 자본을 암호화폐나 피아트 스테이블코인으로 교환할 수 있다면, 원하는만큼 빠르게 거래를 할 수 있었습니다. 그리고 \"안전\"을 위해 피아트로 되돌아가야 할 때는 언제든지 거의 제로 비용으로 모든 자금을 한순간에 스테이블코인으로 인출할 수 있었습니다.\n\n# 목표\n\n오늘날, 스테이블코인은 암호화 자본 시장에서 실제로 발생한 고통을 해결합니다. 스테이블코인은 암호의 핵심 원칙과 완전히 일치하지는 않을 수 있지만(즉, 전혀 분산화되어 있지 않음), 스테이블코인의 목표는 필요하지 않은 곳에 분산화된 제품을 만드는 것이 아닙니다. 대신, 그들은 단순히 은행들이 제공하지 않는 피아트 토큰화 서비스를 제공하기 위해 만들어졌습니다.\n\n\n\n거리낌없이 함께 가주세요. 조금 산만한 이야기로 빠져들지만 말해야 할 게 있어요: 모든 것이 분산화되어야 하는 것은 아니죠 — 오히려 그렇게 되어서는 안 된다고 봅니다. 그래서 메이커다오/DAI와 TerraUSD와 같은 초과담보 안정화 코인과 알고리즘 기반 안정화 코인은 근본적으로 불필요하다고 믿습니다. 하지만 안타깝게도 (그리고 그 결과 재앙으로) 시장은 안정화 코인이 존재하는 진짜 이유 — 즉, 트레이더들이 빠르게 현금과 암호화폐 사이를 이동할 수 있게 하는 것 —과 전체적인 분산화 움직임의 목표인 대중에 불평등을 초래하는 중앙집권 기관이나 단체에 대한 분산화 대안을 창조하는 것을 혼동합니다.\n\n우리가 이미 가치 교환을 위한 분산화된 대안을 갖고 있다는 사실은 중앙집권 은행의 위험을 제한합니다. 그것은 비트코인이라고 불리죠. 안정화 코인은 또 다른 분산화된 가치 보관소가 되기 위한 것이 아니에요 — 다시 말해서, 그 목적은 중앙집중화와 분산화 금융 사이의 간극을 메우는 데 있습니다.\n\n오늘날 안정화 코인의 문제는 중앙화가 아니라 신뢰할 만한, 검증된 은행 기관이 스스로 출시하기를 꺼리는 것입니다. 만약 세계 최고의 시장 운영 은행인 JP 모건 (JPM)이 G10 피아트 화폐 안정화 코인 패키지를 출시했다면, USDT, USDC (Circle), BUSD (Binance) 등을 즉시 몰아낼 것입니다. 기존 안정화 코인 제공 업체들과 달리, 제이미 다이몬의 직원들은 예금을 받고 필요 시 반환하는 방법을 모르는 사람은 없습니다. JPM은 공개 블록체인을 사용하고 이 기술을 일관된 업무 프로세스에 통합하는 방법을 완전히 이해하고 있습니다. 회사 내 블록체인 그룹인 온닉스(Onyx)는 수년간 그 분야에서 활동해왔습니다. 무엇보다 중요한 점은 JPM이 미국 재무부를 자문하는 재무 국부자문위원회의 일원인 \"국내외 재화 차관위원회\"의 일원인 \"결합기간이 지나면 않되는 폐없나다. 만일 JP모건이 지불할 수가 없는 상황이 벌어진다면, 연방은 필요한 자금을 제공하여 JP모건의 고객을 보호할 수 있습니다.\n\nJPM코인은 모든 이들이 즉시 받아들이게 할 수십억 달러 가치의 자산을 유치할 것입니다. 모든 거래소와 트레이더들이 이를 즉시 채택할 것입니다. 유일한 문제는 세계 은행 시스템이 거액의 거래 및 외환 수수료로 연간 벌어 드는 수십조 달러범위를 파괴할 것이라는 것입니다.\n\n\n\n당신이 돈을 옮기는 데 비싼 수수료를 지불할 필요가 없어질 것입니다. 이제 이더리움 네트워크를 통해 JPM 코인을 보내면 네트워크 수수료로 최대 몇 달러가 소요될 뿐입니다. 미국 달러와 유로 사이를 전환할 때 발생하는 엄청난 환율 차이도 미래의 일로 남을 것입니다. USD JPM 코인과 EUR JPM 코인 간에 자유롭고 저렴하게 전환할 수 있기 때문에 다행히도 환율 차익도 사라질 것입니다. Curve는 JPM EUR/USD 풀을 설치하고 FX 거래를 하루 24시간 0.01% 미만의 수수료로 진행할 수 있게 됩니다.\n\n물론, JPM에게 모든게 나쁘게 나올 것은 아닙니다. 추가 예금으로 이익을 낼 수 있게 됩니다. 이러한 예금을 대출로 활용하고 연이율을 벌어들이면서 연방준비제도에 대한 위험이 없어질 것입니다. 그러나 이로 인해 기타 은행 파트너들의 비즈니스는 순식간에 파괴되고, 회사의 미래 수익도 현저히 감소할 것입니다. 2022년 맥킨지 보고서에 따르면, 소비자용 중앙은행 디지털 통화(CBDC)가 성공적으로 도입된다면 전 세계 은행은 연간 2.1조 달러의 수입을 잃을 것으로 예상됩니다.\n\n그래서 연방준비제도 계좌를 가진 은행은 정부가 지시하지 않는 이상 스테이블코인을 출시하지 않을 것입니다. 업계 발전의 현재 단계에서, 암호화 통화 자본 시장에서 절실히 필요로 하는 스테이블코인 서비스를 제공할 비은행 업체에게 여전히 공간이 있고 앞으로도 계속할 것으로 기대됩니다.\n\n# 이혼\n\n\n\n최근 은행이 산타클럴즈(Silvergate) 및 기타 여러 은행이 USDC와 BUSD와 같은 스테이블코인의 서비스를 중단하기로 한 가운데 암호화폐 공간에 울리는 소란이 있습니다. 이산업은 함께 모여 새로운 제품을 만들어야 합니다.\n\n목표는 1 달러 가치지만 제도화된 은행 시스템의 서비스가 필요 없는 토큰을 만드는 것입니다.\n\n목표는 탈중앙화된 피아트 화폐를 만드는 것이 아닙니다. MakerDAO는 좋지만, 실제로 탈중앙화되었다고 가정하더라도 1 달러의 가치에 대한 1 달러의 암호화폐를 걸어놓아야 합니다. 이는 순익에 부정적인 영향을 미치는 더 많은 유동성을 제거합니다. 우리가 필요한 것은 1 USD의 가치에 대한 1 USD의 스테이블코인을 얻기 위해 1 USD의 암호화폐를 걸 수 있는 메커니즘입니다.\n\n# 사토시 나카모토 달러, 나카달러, NUSD\n\n\n\n## 밑바닥\n\n수학을 좋아하지 않는 분들을 위해 미리 조의를 표합니다. 이 글을 다 읽으신 후에는 인지 능력을 낮추며 TikTok 유혹에 빠질 수 있을 거라고 약속합니다.\n\n1 NUSD = 1달러의 비트코인 + 1 비트코인 / 달러 인버스 퍼페츄얼 스왑 숏\n\n비트코인 인버스 퍼페츄얼 스왑 (예: BitMEX의 XBTUSD)은 비트코인으로 지급되는 1달러의 가치를 갖는 다음과 같은 페이오프 함수를 가지고 있습니다:\n\n\n\n**$1 / Bitcoin 가격(달러)**\n\n만약 Bitcoin 가치가 $1이라면, 영원 스왑의 Bitcoin 가치는 1 BTC로, $1 / $1입니다.\n\nBitcoin 가치가 $0.5이라면, 영원 스왑의 Bitcoin 가치는 2 BTC로, $1 / $0.5입니다.\n\nBitcoin 가치가 $2이라면, 영원 스왑의 Bitcoin 가치는 0.5 BTC로, $1 / $2입니다.\n\n\n\n이 기능은 몇 가지 흥미로운 특성을 가지고 있습니다.\n\n비트코인의 미국 달러 가치가 하락하여 0에 가까워질수록, 스왑의 비트코인 가치가 무한대로 증가합니다. 이것은 제품의 리스크 요소로 작용하는데, 비트코인은 최대 21백만 개만 존재할 수 있기 때문입니다. 미국 달러 가격이 감소할수록 비트코인 가치는 지수 함수적으로 증가합니다. 이는 만약 비트코인 가격이 빠르게 하락하고, 이 파생상품이 거래되는 거래소의 유동성이 낮을 경우, 사회화된 손실 상황이 발생할 가능성이 높아진다는 뜻입니다. 이에 대해 나중에 중요성에 대해 다루겠습니다.\n\n반대로, 비트코인의 미국 달러 가치가 증가하여 무한대로 수렴할수록, 스왑의 비트코인 가치는 0에 수렴합니다. 이는 매우 유익한데, 처음에 정확한 비트코인 양만큼 예치하고 시작하는 완전히 자금이 확보된 포지션을 가지고 있다면, 파산이나 청산될 가능성이 전혀 없다는 것을 의미합니다.\n\n빠르게 이를 증명해봅시다.\n\n\n\n가상의 USD 또는 1단위의 NUSD를 만들고 싶다고 가정해 봅시다. 비트코인의 가격이 1달러이고 각 XBTUSD 스왑이 어떤 가격에서도 1달러의 비트코인 가치가 있다고 합시다.\n\n1 NUSD를 만들기 위해선 파생 상품 거래소(예: BitMEX)에 1 BTC를 예금하고 1 XBTUSD 스왑을 공매도해야 합니다. \n\n이제 비트코인 가격이 1달러에서 0.1달러로 하락했습니다.\n\nBTC로 보는 XBTUSD 스왑 가치 = 1달러 / 0.1달러 = 10 BTC\n\n\n\nXBTUSD 스왑 포지션의 PNL = 10 BTC (현재 가치) — 1 BTC (초기 가치) = +9 BTC (수익이 발생했어요).\n\n거래소에 1 BTC를 마진으로 예치했어요.\n\n거래소 내 전체 자산은 초기 입금으로 1 BTC와 XBTUSD 포지션에서 벌어들인 9 BTC로 총 10 BTC가 되었어요.\n\n현재 비트코인 가격은 $0.1이지만, 제가 10 BTC를 가지고 있기 때문에 포트폴리오의 달러 가치는 변하지 않아요. 즉 $1이에요 ($0.1 * 10 BTC).\n\n\n\n지금 비트코인 가격은 $1에서 $100으로 상승했어요.\n\nXBTUSD 스왑의 가치는 BTC로 $1 ÷ $100 = 0.01 BTC입니다.\n\nXBTUSD 스왑 포지션의 PNL은 0.01 BTC (현재 가치) — 1 BTC (초기 가치) = -0.99 BTC입니다. (돈을 잃고 있네요)\n\n거래소에 1 BTC의 마진이 예금으로 보유돼 있어요.\n\n\n\n거래소에서 제 전체 자산은 1 BTC(초기 입금액) - 0.99 BTC(XBTUSD 포지션으로 인한 손실)이며, 총 잔고는 이제 0.01 BTC입니다.\n\n비트코인 가격은 현재 $100이지만, 0.01 BTC만 가지고 있기 때문에 총 포트폴리오의 USD 가치는 변함없이 $1에 해당합니다. ($100 * 0.01 BTC)\n\n가격이 100배 오르더라도 파산하지 않았음을 확인할 수 있습니다.\n\n비트코인 + 비트코인/USD 인버스 퍼펿럴 스왑 관계는 매우 중요하며 핵심적인데요, 이에 대해 이야기할 때마다 수학적 분석이 필요합니다. 이 관계를 통해 우리는 실제 USD 동등물을 합성적으로 생성할 수 있습니다. 이 과정에서는 암호화폐가치를 생성하는 것보다 fiat 가치를 만드는 데 소요되는 암호화폐 담보는 더 많지 않으며, 이는 MakerDAO와 같은 시스템에서 발생하는 문제점을 회피할 수 있습니다.\n\n\n\n## 수탁업체\n\n이 부분은 매우 중요합니다: Naka달러를 토큰화하기 위해 적대적인 피아트 은행에 의존하는 대신, Naka달러는 유동적인 역반전 무기한 스왑을 상장하는 파생포화거래소에 의존할 것입니다. 이는 탈중앙화되지 않을 것입니다 — Naka달러 솔루션의 위험 지점은 중앙집중화 된 암호화 파생상품 거래소입니다. 분산된 파생 거래소는 중앙집중화된 대안들만큼 유동성이 떨어지며, 그들의 가격 오라클은 중앙집중화된 현물 거래소로부터 피드를 받아와야 하기 때문에 배제했습니다.\n\n## NakaUSD DAO\n\n첫 번째 단계는 레거시 법률 체계와 암호 환생 DAO 모두에 존재하는 조직을 만드는 것입니다. DAO는 모든 회원 거래소에 계정이 필요하므로 레거시 법률적 존재가 필요합니다.\n\n\n\nDAO는 자체 거버넌스 토큰인 NAKA를 발행했습니다. 창시 당시에 유한한 양의 NAKA 토큰이 생성될 것입니다. 첫 번째 모금액은 나중에 설명할 싱킹 풀을 자금 지원하고 NUSD 공급의 초기 주식을 만드는 데 사용될 것입니다. 그 후에는 NAKA가 DeFi 생태계 전반에 걸쳐 유동성을 제공하는 대가로 DAO에서 배포될 것입니다. 예를 들어 NAKA는 Uniswap이나 Curve 풀에서 NUSD 대 다른 자산 유동성을 제공하는 자에게 배포될 수 있습니다. 또한 NAKA 토큰이 높은 수요를 받는 경우 DAO는 싱킹 펀드의 크기를 더욱 강화하기 위해 더 많은 NAKA를 판매하기로 결정할 수 있습니다.\n\nNAKA 소지자들은 회원 거래소가 누구인지와 같은 운영상의 문제에 대해 투표할 수 있습니다. 회원 거래소들은 1 NUSD = 1 USD 환율의 기초가 되는 BTC와 단기 역위 계약을 보유할 것입니다. 회원 거래소 계정은 DAO 이름으로 되어 있을 것입니다. 회원 거래소들은 최소한 비트코인 마진 거래 비트코인/USD 역위 계약을 제공해야 합니다. 단일 장애 지점을 줄이고 가급적 많은 암호화폐 생태계 관리자를 포함하기 위해 하나 이상의 회원 거래소가 필요합니다.\n\nNAKA 거버넌스 토큰과 NUSD는 이더리움 블록체인 상에 존재하는 ERC-20 토큰입니다.\n\n다음 예시를 위해 두 개의 회원 거래소인 BitMEX와 Deribit이 있다고 가정해보겠습니다. 두 거래소 모두 비트코인 마진 거래 비트코인/USD 역위 계약 XBTUSD를 제공합니다.\n\n\n\nNAKA 홀더들은 순 이자 마진을 어떻게 배분할지 투표할 것입니다. 과거 스왑은 숏들에게 이자를 지불해왔는데, 이것을 펀딩이라고 부르며 대부분의 스왑은 8시간마다 펀딩을 지급합니다. 시간이 흐를수록 DAO의 순 자본 잔액은 NUSD 토큰의 가치를 초과할 것입니다. 회계적으로 보면, 나카DAO의 주주자 자본은 양수이며 성장할 것입니다.\n\n### 인가된 참가자 (AP)\n\nDAO로부터 NUSD를 직접 창출하고 교환할 권한을 가질 수 있는 몇몇 기관 또는 개인들만이 AP가 될 수 있을 것입니다.\n\nAP가 되기 위한 요구 사항은 다음과 같이 생각합니다:\n\n\n\n- 각 회원 거래소에서 완전히 인증된 계정 보유하기.\n- DAO의 모든 신원 확인 요구 사항 충족하기.\n\nNUSD는 명시적으로 (예: NUSD/USD) 또는 암시적으로 (예: BTC/NUSD가 BTC/USD에 프리미엄이나 할인이 되는) 미국 달러에 대해 거래될 것입니다. NUSD가 프리미엄으로 거래되는 경우, APs는 1 NUSD를 1 NUSD = 1 USD의 비율로 생성하고 1 NUSD를 판매하여 1 USD보다 많은 금액을 받아 이윤을 창출할 것입니다. NUSD가 할인된 가격으로 거래되는 경우, APs는 1 USD보다 적은 금액으로 1 NUSD를 구매하고 1 NUSD를 보상하여 1 USD를 받아 이윤을 창출할 것입니다.\n\n## NakaDAO BTC/USD 스팟 가격 피드\n\nDAO는 비트코인의 미국 달러 가치를 현물 기준으로 얼마인지에 대해 자체적인 견해가 필요합니다. 이는 얼마나 많은 스왑이 필요한지를 결정하게 됩니다.\n\n\n\n각 거래소 회원은 BTC/USD의 현물 가격을 본인만의 견해로 보고합니다.\n\n현물 가격 = 합계 (회원 가중치 * 회원 BTC/USD 현물 지수)\n\n예시:\n\nBitMEX 가중치 = 50%\n\n\n\nDeribit의 가중치 = 50%\n\nBitMEX BTC/USD 현물가 = $100\n\nDeribit BTC/USD 현물가 = $110\n\nNakaDAO BTC/USD 현물가 = (50% * $100) + (50% * $110) = $105\n\n\n\n## 생성\n\n어떤 AP가 100 NUSD를 만들고자 합니다.\n\nNakaDAO BTC/USD 현물 가격은 $100입니다.\n\n비트코인 거래소인 BitMEX와 Deribit의 가중치가 각각 50%인 두 회원이 있습니다.\n\n\n\n$100에 BTC/USD 가격이 $100일 때 1 BTC와 동일합니다.\n\n어떤 가격이든 각 XBTUSD 스왑이 $1의 비트코인 가치가 있다면, $100 노티오널 가치의 스왑을 갖기 위해서는 100개의 스왑이 필요합니다.\n\n각 회원 거래소에서 AP는 다음을 보유해야 합니다:\n\n가용한 0.5 BTC 마진 = 50% * 1 BTC\n\n\n\nShort 50 XBTUSD swaps = 50% * Short 100 XBTUSD Swaps\n\n블록 거래 메시징 프로토콜 Paradigm과 같은 것을 사용하여 DAO와 AP 간에 비트코인 및 스왑을 교차시킬 수 있습니다.\n\nAP와 DAO가 두 거래소에서 교차하는 경우 발생하는 일입니다:\n\nAP ERC-20 주소:\n\n\n\n100 NUSD ERC-20 토큰을 받았어요!\n\nBitMEX의 AP:\n\n0.5 BTC 마진을 잃었어요.\n\n50개의 XBTUSD 숏 스왑을 닫거나 50개의 XBTUSD 롱 스왑을 오픈했어요.\n\n\n\nAP가 Deribit에서:\n\n0.5 BTC 마진을 잃었습니다.\n\nXBTUSD 단기 매수 50개를 청산하거나 XBTUSD 단기 매도 50개를 오픈합니다.\n\nBitMEX의 DAO:\n\n\n\n이득 0.5 BTC 마진\n\n50개의 숏 XBTUSD 스왑 오픈\n\nDeribit에서 DAO:\n\n이득 0.5 BTC 마진\n\n\n\n조항 50개의 짧은 XBTUSD 스왑을 생성하였습니다.\n\nDAO Treasury:\n\nNUSD 부채가 100 증가하였습니다. 즉, 100 NUSD가 발행되었습니다.\n\nAP는 NUSD를 생성하기 위해 DAO에 수수료를 지불해야 합니다.\n\n\n\n## 환전\n\n어떤 AP가 100 NUSD를 환전하고 싶어합니다.\n\nNakaDAO BTC/USD 현물가는 $100입니다.\n\n해당 AP는 ERC-20 주소에 100 NUSD를 소유해야 합니다.\n\n\n\nParadigm와 같은 블록트레이딩 메시징 프로토콜을 사용하여 비트코인 및 DAO 및 AP 간의 스왑을 교차할 예정입니다.\n\nAP ERC-20 주소:\n\nDAO의 지갑 주소로 100 NUSD를 전송합니다.\n\nBitMEX에서의 AP:\n\n\n\n이익 0.5 BTC 마진\n\n50개의 숏 XBTUSD 스왑을 오픈합니다.\n\nDeribit의 AP:\n\n이익 0.5 BTC 마진\n\n\n\n50개의 짧은 XBTUSD 스왑을 오픈했습니다\n\nBitMEX의 DAO:\n\n0.5 BTC의 마진을 손실하였습니다\n\n50개의 짧은 XBTUSD 스왑을 종료했습니다\n\n\n\n# Deribit 상의 DAO:\n\nDAO Treasury에서 0.5 BTC의 마진 손실이 발생했고 50개의 XBTUSD 숏 스왑을 클로즈했습니다.\n\n\n\n**NUSD 부채가 100 감소하여 100 NUSD가 소각되었습니다.**\n\nAP가 NUSD를 교환하기 위해 DAO에 수수료를 지불해야 합니다.\n\nNUSD, BTC의 창출 및 교환은 AP, DAO 및 회원 거래소의 해당 계정 간의 이동이 이루어집니다. 은행의 서비스가 필요한 USD 이체는 없습니다.\n\n## 나카DAO 대차대조표\n\n\n\n자산:\n\n회원 거래소에 보유한 비트코인과 단기 역방향 무기한 스왑.\n\n부채:\n\n발행된 전체 NUSD 금액.\n\n\n\nNakaDAO가 자금을 재치거나 낌새 없이 다루지 않는지 확인하려면 etherscan.io와 같은 이더리움 블록체인 익스플로러, 그리고 DAO의 비트코인 잔고와 DAO의 총 오픈 숏 스왑 포지션에 대한 거래소의 증명이 필요합니다. 그런 다음, 위에서 설명한 간단한 수학을 사용하여 DAO의 주주 자본을 계산하고 자산이 부채와 동일하거나 그 이상인지 확인할 수 있습니다.\n\n이전에 언급했듯이, 스왑은 역사적으로 숏에게 이자를 지불해 왔습니다. 이자는 비트코인으로, 따라서 회원 거래소에 보유된 비트코인이 증가해야 합니다. 이에 부합하는 경우, 자산과 부채를 순청산 계산하면 여유자금이 생깁니다. 숏에게 이자를 지불했던 시기도 있고, 그러한 경우에는 적자도 발생할 수 있습니다.\n\n## NakaDAO 침몰펀드\n\n저는 이제 다룰 세 가지 위험 사항이 있습니다. 이 위험 사항을 따라가면서 초기 침몰펀드와 NAKA 거버넌스 토큰의 후속 매각이 어떠한 자본 결핍도 대응할 수 있다는 것을 기억하세요.\n\n\n\n위험 1: 거래소 회원이 비트코인을 분실하는 경우\n\n거래소 회원이 다양한 이유로 고객 비트코인 예금을 분실할 수 있습니다. 가장 가능성이 높은 요인은 내부자 습득이거나 외부 해킹일 것입니다. 어느 쪽이 되었던, 가라앉는 자금은 차이를 메꾸는 데 도움이 필요할 것입니다.\n\n위험 2: 부정적인 자금\n\n자금이 부정적인 경우, 숏 스왑 보유자는 롱 보유자들에게 이자를 지불해야 합니다. 이로 인해 비트코인 잔고가 하락하여 신디틱적으로 1 NUSD가 1 USD보다 적게 가치를 매길 수 있습니다. DAO 자산이 부채보다 가치가 적어질 때까지 명확해질 것입니다. 이 단계에서 가라앉는 자금은 차이를 메꾸는 데 도움이 필요합니다.\n\n\n\n위험 3: 사회화된 손실\n\n앞서 설명한대로, 비트코인 가격이 하락할 때는 숏 스왑 보유자가 미실현 이익을 얻습니다. 마진 통화가 비트코인인 가운데, 가격이 하락함에 따라 롱 스왑 보유자가 빚는 비트코인 가치가 기하급수적으로 증가하게 됩니다. 어떤 경우에는 롱 포지션 거래자들이 숏스에게 빚 내야 할 금액을 갚지 못할 수도 있습니다. 이때 거래소가 개입하여 숏스의 이익을 줄이거나 일부 숏 포지션을 청산할 수 있습니다. 어쨌든, 비트코인 대 숏 스왑의 올바른 비율이 되풀이되면 DAO는 비트코인이 부족해 질 수도 있습니다. 완전히 지급되지 않았거나 원하는 전체 포지션을 유지하지 못했기 때문입니다. 이때 공포 탈출기금이 차동을 떨어뜨릴 필요가 있습니다.\n\n## 산업 참여도\n\n큰 중앙 집중형 거래소 생태계는 다양한 이유로 이러한 안정화폐를 지원해야 합니다. 이를 통해 그들은 암호 화폐 대 법정 통화 쌍을 모두 암호 화폐 대 NUSD로 계산해야 합니다. 이는 트레이더들 사이에서 NUSD를 생성하고 보유하는 수요를 자연스럽게 만들며, 암호 화폐 거래를 위해서는 NUSD 보유가 필수 조건이 되도록 해야 합니다.\n\n\n\nNUSD를 사용하는 것과 다른 은행 종속형 stablecoin을 사용하는 것을 비교하면, 사용 중인 stablecoin이 내일, 다음 달, 내년에도 존재할지에 대한 걱정을 제거할 수 있습니다. 그런 불안을 해소하면 더 많은 거래가 가능해지며, 거래자들은 더 이상 자신들이 USD 가치의 1:1에 교환할 수 없을 수도 있는 다량의 stablecoin을 들고 있게 될까 봐 걱정할 필요가 없게 됩니다.\n\nNUSD를 사용하는 것과 다른 stablecoin을 사용하는 것으로 암호화폐 FUD의 중심 요소를 제거할 수 있습니다. 나는 이러한 stablecoin이 폰지 사기라는 글들을 읽는 것에 지친 상태입니다. 한 번 누군가 그들을 폭로하거나 그들의 은행이 그들을 버리면, 전체 암호화폐 이코노미가 흔들릴 것이라는 내용을 계속해서 들어서 거래자들이 멀리하도록 합니다. 이 FUD의 반복은 거래자들을 기피하게 만들고, 우리는 쉽게 이를 영구히 제거할 수 있습니다.\n\nNUSD의 널리 퍼지는 것은 모든 대형 거래소가 경쟁 우위를 얻기 위해 자사의 stablecoin을 만들려고 혈압을 올리는 것을 멈출 것입니다. 대다수의 대형 참가자 거래소가 회원 거래소였다면, 모두가 NUSD의 성장에서 혜택을 받을 수 있었을 것입니다. 현재 상태와 비교했을 때, 이는 상당히 더 유익할 것입니다. 많은 USD stablecoin이 존재하는 현재 상황에서, Sam Bankman-Fried가 FTX 기관을 신뢰하도록 속인다면 더 많은 USD를 뒷받침하기 위해 stablecoin을 출시하는 제의를 성공했을 때 얼마나 엉망이 되었을지 상상해보세요. 믿든지 말든지, FTX는 이러한 제품을 출시하려는 관련 승인을 얻기 위한 적극적인 논의를 진행 중이었습니다. 다행히도, 폴리큐가 사라지기 전에 그들이 더 많은 사람들의 돈을 훔치기 전에 붕괴했습니다.\n\n# 우리에게는 힘이 있다.\n\n\n\n암호 화폐 거래소와 예금자들은 자신의 재산을 보유한 중앙집중형 기관에 대해 매우 경계심이 많습니다. 전 세계의 금융 규제 기관들은 이제 암호 화폐 입금이 급격히 빠져나갈 때 어떤 일이 벌어지는지 현실적인 사례를 갖고 있습니다. 실버게이트(Silvergate)는 암호 화폐 입금을 신속하게 처리하지 않고 적절하게 위험을 관리하지 않아 문제가 발생했습니다. 실버게이트가 미국 규제은행이라는 사실은 중요하지 않습니다. 은행 파산 절차가 실제로 어떻게 진행되는지 직접 체험하고 싶나요? 아니죠 – 위험이 발생하자마자 더 안전하다고 여겨지는 은행 기관으로 자금을 인출할 것입니다.\n\n썩은 독수리길(Great Financial Crisis) 이후에 배치된 은행 규제 때문에 미국 국채 시장의 유동성은 역사적으로 낮아졌습니다. 미국 국채 시장에서의 유동성 깊이를 제공하는 것이 더 이상 수익성이 없거나 불가능하기 때문에 은행들이 전에 제공했던 깊은 유동성을 제공하는 것이 불가능합니다. 따라서 이런 고유동성과 낮은 유동성 시기에 이러한 채권들의 1,000억 달러 시장 주문 덤프는 심각한 시장 장애를 초래할 것입니다.\n\nUSD 피아트 안정코인은 단순히 암호화폐 시장의 규모를 증가시키기 위해 필요한 크기로 확장될 수 없을 것입니다. 대규모 안정코인이 소비된 USD 안정코인의 총량이 증가함에 따라(암호화폐 총 시장 규모가 USD 안정코인의 총량과 양의 상관 관계가 있다고 가정한다면) 모든 그 돈을 고객 약속을 이행하기 위해 즉각적으로 부채 보유액을 현금화해야 하는 조직의 손에 두는 것은 미국 금융 시스템에 너무 큰 위험을 가지고 있기 때문입니다. 이렇기 때문에 삼거래소(USDT, USDC, BUSD)가 계속 존재할 수 있지만, 총량으로서 그들이 예금 베이스를 얼마나 크게 확장시킬 수 있는 한계가 있습니다.\n\n이 큰 안정코인들이 대량의 미국 국채 채무를 보유하는 이유는 이자를 지급하고 USD로 거의 무위험하기 때문입니다. 안정코인 발행자들은 안정코인의 보유자에게 이자를 지불하지 않습니다. 이것이 그들이 수익을 창출하는 방법입니다.\n\n\n\n하지만 걱정할 이유는 없어요. 우리 암호화폐 믿는 사람들은 $1조 이상 가치의 NakaUSD를 지원하기 위해 필요한 도구와 조직을 갖고 있어요. 이 해결책이 거래자와 거래소에서 받아들여지면, 비트코인 파생상품의 거래 흥행이 크게 증가할 것이고, 깊은 유동성이 만들어질 거에요. 이것은 투기자와 헤지자 둘 다 도움이 될 거에요. 이것은 긍정적인 플라이휠이 되어서 회원 거래소뿐만 아니라 DeFi 사용자와 연중무휴 소액 수수료로 이체 가능한 USD 토큰이 필요한 다른 모든 이들에게 도움이 될 거에요.\n\n저는 의욕적인 개인들의 팀이 이와 유사한 제품을 개발하기 시작하기를 진심으로 희망해요. 이것은 소유될 필요가 없는 것이에요 (예를 들어, 거대한 거버넌스 토큰 보유량을 통해), 혹은 중앙집중화된 거래소 중 하나에서 주도되어선 안 돼요. 만약 믿을 만한 독립적인 팀이 유사한 제품에 대해 작업 중이라면, 저는 그들이 그것을 실현할 수 있도록 도와드리기 위해 내가 갖고 있는 능력의 한도 내에서 최선을 다할 거에요.","ogImage":{"url":"/assets/img/2024-05-05-DustonCrust_0.png"},"coverImage":"/assets/img/2024-05-05-DustonCrust_0.png","tag":["Tech"],"readingTime":18},{"title":"삐걸 뉴스 - 2024년 4월 26일","description":"","date":"2024-05-05 16:54","slug":"2024-05-05-PufferNewsApril262024","content":"\n\n![Puffer News](/assets/img/2024-05-05-PufferNewsApril262024_0.png)\n\n안녕 Puffer 패밀리! Puffer와 관련된 모든 정보의 신뢰할 만한 출처에 오신 것을 환영합니다!\n\n최신 업데이트, 파트너쉽, 발전 상황을 살펴보며, 언제나 선호하는 Native Liquid Restaking Protocol의 발전상황을 알 수 있도록 도와드립니다.\n\n지금 바로 Puffer에서 일어나고 있는 최근 소식을 알아봅시다 👇\n\n\n\n## Puffer이 이더리움의 분산화를 촉진하기 위해 1800만 달러를 조달\n\nPuffer는 환상적인 소식을 전하며 주목을 받고 있습니다 — 우리는 시리즈 A 펀딩에서 1800만 달러를 성공적으로 확보했습니다! Brevan Howard Digital 및 Electric Capital의 능란한 해양 선장들이 이 배를 조정하고, 이 보물은 우리의 Puffer Mainnet을 출시하여 더 분산화된 이더리움 바다로 덤벼들 것입니다. Coinbase Ventures, Kraken Ventures, Franklin Templeton 등에서 새로 합류한 선원들을 환영하는 데 큰 기쁨을 느낍니다! Liquid Restaking을 혁신하고 흥미진진한 미지의 바다로 우리를 이끌어주는 우리의 항해에 믿음을 줘서 감사합니다!\n\n## 메인넷 러시 캠페인: 보상을 노려 항해하세요\n\n메인넷 러시가 탑승했습니다! stETH 또는 wstETH 예치로 Puffer 포인트와 EigenLayer 포인트를 5배로 벌어보세요. 이 보너스의 해일은 단초에 불과합니다 — Puffer 생태계에서 보물을 최대화하기 위한 더 많은 통합에 대비하세요. 서둘러라, 이류는 영원토록 이어지지 않을 거에요!\n\n\n\nPuffer 퀘스트 포턈에 참여하세요!\n\n## 테스트넷이 여전히 운행 중입니다!\n\n저희 공개 테스트넷은 여전히 활성화 중이며, 이더리움 유효성 검사자들에게 Puffer의 네이티브 리퀴드 리스테이킹과 함께 실용적인 모험을 제공하고 있습니다. 안정적인 서명자인 Secure-Signer, 손실 방지 솔루션인 Validator Tickets 등 Puffer의 독특한 혁신을 경험해보세요. 이런 첨단 기술들은 안전성과 효율성을 향상시키기 위해 정교하게 설계되어 있으며, 리스테이킹 여정에서의 안전과 효과성을 높이기 위해 노력하고 있습니다. 출항 준비가 되셨나요?\n\n요구 사항 및 지침은 다음 링크를 참고해주세요: Node Requirements\n\n\n\n# 설정: Puffer Testnet 설정\n\n공식 발표: Twitter의 Puffer\n\n## TVL 그리고 탈중앙화를 향한 여정\n\n특히 현재 전체 스테이킹된 ETH의 29.4%를 통제하는 Lido의 stETH와 같은 단일 리퀴드 스테이킹 토큰 (LST) 주변의 과도한 중앙화는 중요한 위험을 안겨줍니다. 이러한 집중은 카르텔화로 이어질 수 있으며, 잠재적인 거래 검열 및 조작적인 MEV (최대 뽑을 수 있는 가치) 추출을 통한 이더리움 네트워크를 위협할 수 있습니다. 이 중앙화는 궁극적으로 전체 네트워크의 무결성과 보안을 저해할 수 있습니다.\n\n\n\n한국어 암호화폐 블로그처럼 쓰도록 할게요.\n\n조금 전부터 Puffer의 미션은 이더리움의 탈중앙화를 옹호하는 데 있었습니다. 저희의 메인넷 시작 전 단계인 \"Crunchy Carrot 캠페인\" 기간 동안에는, 인상적인 14억 스테스 예금을 모았는데요, 이는 전체 스테스의 약 4.48%를 나타냅니다. 저희의 메인넷 론칭과 뱀파이어 캠페인이 시작되면, 모든 스테스는 이더리움으로 전환되어 탈중앙화되고 허가 없는 검증자들을 지원하는 데 사용될 것입니다. 이제 Puffer의 야망적인 꿈이 바다의 수호자가 되는 것의 시작을 알리는 것입니다!\n\n## DeFi 통합\n\n최신 DeFi 통합을 통해 새로운 항해에 나서 보세요! pufETH 소지자들은 이제 보상이 풍부한 생태계를 통해 항해할 수 있는 전례없는 기회를 누릴 수 있습니다. 이번 여정은 특별한 보너스와 높은 APR로 더욱 풍요롭게 만들어 줄 거에요.\n\nDesyn 프로토콜: Desyn 프로토콜을 타고 항해해 보세요. pufETH 소지자들은 Puffer, EigenLayer, 그리고 Desyn으로부터 삼중 포인트를 누릴 수 있습니다. 50~300% APR 수익률의 반환을 위해 항로를 설정하고, dpufETH 펀드를 발행함으로써 추가적인 보너스도 받을 수 있습니다.\n\n\n\nBalancer: Balancer에서 pufETH/stETH 풀에 뛰어들어서 예금에 대해 2배의 퍼퍼 포인트를 모으세요.\n\nCyberConnect: CyberConnect에서 pufETH를 스테이킹하여 Puffer Points에 1.15배의 보너스를 받으며 Cyber 재스테이킹 포인트를 벌 수 있습니다.\n\n지금 재스테이킹 하기: [https://quest.puffer.fi/integration](https://quest.puffer.fi/integration)\n\n## 인프라 구축 혁신\n\n\n\n기술적인 바다를 항해하면서, 우리는 pufETH를 더 견고하고 다재다능하게 만들기 위해 인프라를 개선하고 있습니다. 파트너십은 새로운 지평을 열고, Puffer를 LRT 생태계에서 빛나는 존재로 추진하고 있습니다.\n\nRedstone Oracle: Redstone과의 새로운 협업을 통해 Modular Oracles을 통해 pufETH 가격 피드를 제공할 것입니다. 고정 된 오라클 모델을 통해 우리의 DeFi 통합의 정확성을 향상시켜 우리 커뮤니티에 가장 투명한 서비스를 제공할 것입니다.\n\nMulti-Puff: Puffer는 메인넷 출시 후 곧 pufETH 멀티체인을 진행할 예정이며, 다양한 블록체인 환경에 걸쳐 우리의 영향력을 확장할 것입니다. 자세한 내용은 곧 공개될 예정입니다!\n\n## 보안 업데이트\n\n\n\n**스마트 계약 감사:**\n저희와 Nethermind의 초기 감사가 완료되어 방어 수준을 향상시켰습니다. 프로토콜을 더욱 안전하게 만들기 위해 추가 감사가 계획 중에 있습니다.\n\n**버그 바운티 프로그램:**\nImmunefi와 함께 진행된 최신 버그 바운티 행사가 성공적으로 마무리되었습니다. $50,000의 보상이 지급되었으며, 앞으로 더 많은 바운티 프로그램이 예정되어 있습니다!\n\n**사기 퇴치:**\nDoppel과 함께 온라인 사기와의 전투를 지속하고 있습니다. 페이크 토큰과 사기를 위해 온체인 데이터, 도메인, 그리고 소셜 미디어를 모니터링하여 커뮤니티를 안전하게 지키고 있습니다. 함께 노력하여 트위터, 텔레그램, 그리고 다른 소셜 미디어 플랫폼에서 수십 개의 사기를 제거했습니다.\n\n향후 업데이트는 트위터, 디스코드, 그리고 텔레그램에서 확인하실 수 있습니다. 항상 즐거운 증기 보내세요! 🐡\n\n\n\n# Puffer 소개\n\nPuffer는 EigenLayer에서 구축된 최초의 Liquid Restaking Protocol (nLRP)입니다. Puffer는 PoS 및 Restaking 보상이 발생하는 native Liquid Restaking Tokens (nLRTs)를 소개합니다. 프로토콜 내 노드들은 Puffer의 안티-슬래싱 기술을 활용하여 리스크를 감소시키고 자본 효율성을 높일 수 있으며, native restaking 노출을 통해 보상을 최적화할 수 있습니다. [Puffer 웹사이트](http://puffer.fi/)를 방문해보세요.","ogImage":{"url":"/assets/img/2024-05-05-PufferNewsApril262024_0.png"},"coverImage":"/assets/img/2024-05-05-PufferNewsApril262024_0.png","tag":["Tech"],"readingTime":4}],"page":"57","totalPageCount":66,"totalPageGroupCount":4,"lastPageGroup":20,"currentPageGroup":2},"__N_SSG":true}